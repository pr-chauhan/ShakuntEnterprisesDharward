//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace RDLCDesign {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ShakuntEnterprisesDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ShakuntEnterprisesDataSet : global::System.Data.DataSet {
        
        private TestCertificateRecordDataTable tableTestCertificateRecord;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ShakuntEnterprisesDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected ShakuntEnterprisesDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TestCertificateRecord"] != null)) {
                    base.Tables.Add(new TestCertificateRecordDataTable(ds.Tables["TestCertificateRecord"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TestCertificateRecordDataTable TestCertificateRecord {
            get {
                return this.tableTestCertificateRecord;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ShakuntEnterprisesDataSet cln = ((ShakuntEnterprisesDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TestCertificateRecord"] != null)) {
                    base.Tables.Add(new TestCertificateRecordDataTable(ds.Tables["TestCertificateRecord"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTestCertificateRecord = ((TestCertificateRecordDataTable)(base.Tables["TestCertificateRecord"]));
            if ((initTable == true)) {
                if ((this.tableTestCertificateRecord != null)) {
                    this.tableTestCertificateRecord.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ShakuntEnterprisesDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ShakuntEnterprisesDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTestCertificateRecord = new TestCertificateRecordDataTable();
            base.Tables.Add(this.tableTestCertificateRecord);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeTestCertificateRecord() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ShakuntEnterprisesDataSet ds = new ShakuntEnterprisesDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void TestCertificateRecordRowChangeEventHandler(object sender, TestCertificateRecordRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TestCertificateRecordDataTable : global::System.Data.TypedTableBase<TestCertificateRecordRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnCertificateNo;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnIssueDate;
            
            private global::System.Data.DataColumn columnQuanity;
            
            private global::System.Data.DataColumn columnInvoiceNo;
            
            private global::System.Data.DataColumn columnTradeDesignation;
            
            private global::System.Data.DataColumn columnSize;
            
            private global::System.Data.DataColumn columnBatchDate;
            
            private global::System.Data.DataColumn columnBatchNo;
            
            private global::System.Data.DataColumn columnManufecturingDate;
            
            private global::System.Data.DataColumn columnSpecification;
            
            private global::System.Data.DataColumn columnWeldingProcess;
            
            private global::System.Data.DataColumn columnShieldingGas;
            
            private global::System.Data.DataColumn columnPreHeatInerpassTemp;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnAPMS;
            
            private global::System.Data.DataColumn columnFlowRate;
            
            private global::System.Data.DataColumn columnCurrentPolarity;
            
            private global::System.Data.DataColumn columnVolts;
            
            private global::System.Data.DataColumn columnTravelSpeed;
            
            private global::System.Data.DataColumn columnBaseMetal;
            
            private global::System.Data.DataColumn columnElement_MIN_C;
            
            private global::System.Data.DataColumn columnElement_MIN_SI;
            
            private global::System.Data.DataColumn columnElement_MIN_MN;
            
            private global::System.Data.DataColumn columnElement_MIN_P;
            
            private global::System.Data.DataColumn columnElement_MIN_S;
            
            private global::System.Data.DataColumn columnElement_MIN_NI;
            
            private global::System.Data.DataColumn columnElement_MIN_CR;
            
            private global::System.Data.DataColumn columnElement_MIN_MO;
            
            private global::System.Data.DataColumn columnElement_MIN_CU;
            
            private global::System.Data.DataColumn columnElement_MAX_C;
            
            private global::System.Data.DataColumn columnElement_MAX_SI;
            
            private global::System.Data.DataColumn columnElement_MAX_MN;
            
            private global::System.Data.DataColumn columnElement_MAX_P;
            
            private global::System.Data.DataColumn columnElement_MAX_S;
            
            private global::System.Data.DataColumn columnElement_MAX_NI;
            
            private global::System.Data.DataColumn columnElement_MAX_CR;
            
            private global::System.Data.DataColumn columnElement_MAX_MO;
            
            private global::System.Data.DataColumn columnElement_MAX_CU;
            
            private global::System.Data.DataColumn columnTest_MIN_UTS;
            
            private global::System.Data.DataColumn columnTest_MIN_YS;
            
            private global::System.Data.DataColumn columnTest_MIN_Elongation;
            
            private global::System.Data.DataColumn columnTest_MAX_UTS;
            
            private global::System.Data.DataColumn columnTest_MAX_YS;
            
            private global::System.Data.DataColumn columnTest_MAX_Elongation;
            
            private global::System.Data.DataColumn columnTest_Temp;
            
            private global::System.Data.DataColumn columnTest_ImpectValue;
            
            private global::System.Data.DataColumn columnTest_Condition;
            
            private global::System.Data.DataColumn columnSize_StandardValue;
            
            private global::System.Data.DataColumn columnSize_ActualValue;
            
            private global::System.Data.DataColumn columnCoating_StandardValue;
            
            private global::System.Data.DataColumn columnCoating_ActualValue;
            
            private global::System.Data.DataColumn columnUTSWire_StandardValue;
            
            private global::System.Data.DataColumn columnUTSWire_ActualValue;
            
            private global::System.Data.DataColumn columnCastDia_StandardValue;
            
            private global::System.Data.DataColumn columnCastDia_ActualValue;
            
            private global::System.Data.DataColumn columnHelix_StandardValue;
            
            private global::System.Data.DataColumn columnHelix_ActualValue;
            
            private global::System.Data.DataColumn columnOtherTest_Radio_Specs;
            
            private global::System.Data.DataColumn columnOtherTest_FaceBend_Specs;
            
            private global::System.Data.DataColumn columnOtherTest_Filled_Specs;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnIsApproved;
            
            private global::System.Data.DataColumn columnHideSection;
            
            private global::System.Data.DataColumn columnCombineBatchNo;
            
            private global::System.Data.DataColumn columnCertificate_Type;
            
            private global::System.Data.DataColumn columnCreated_Date;
            
            private global::System.Data.DataColumn columnCreated_By;
            
            private global::System.Data.DataColumn columnModified_Date;
            
            private global::System.Data.DataColumn columnModified_By;
            
            private global::System.Data.DataColumn columnApproved_By;
            
            private global::System.Data.DataColumn columnApproved_Date;
            
            private global::System.Data.DataColumn columnIsShowCELogo;
            
            private global::System.Data.DataColumn columnTally_ItemName;
            
            private global::System.Data.DataColumn columnGradeType;
            
            private global::System.Data.DataColumn columnIsShowMig;
            
            private global::System.Data.DataColumn columnIsShowFlux;
            
            private global::System.Data.DataColumn columnIsShowNone;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public TestCertificateRecordDataTable() {
                this.TableName = "TestCertificateRecord";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal TestCertificateRecordDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected TestCertificateRecordDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CertificateNoColumn {
                get {
                    return this.columnCertificateNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IssueDateColumn {
                get {
                    return this.columnIssueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn QuanityColumn {
                get {
                    return this.columnQuanity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InvoiceNoColumn {
                get {
                    return this.columnInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TradeDesignationColumn {
                get {
                    return this.columnTradeDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SizeColumn {
                get {
                    return this.columnSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BatchDateColumn {
                get {
                    return this.columnBatchDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BatchNoColumn {
                get {
                    return this.columnBatchNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ManufecturingDateColumn {
                get {
                    return this.columnManufecturingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SpecificationColumn {
                get {
                    return this.columnSpecification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WeldingProcessColumn {
                get {
                    return this.columnWeldingProcess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ShieldingGasColumn {
                get {
                    return this.columnShieldingGas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PreHeatInerpassTempColumn {
                get {
                    return this.columnPreHeatInerpassTemp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn APMSColumn {
                get {
                    return this.columnAPMS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FlowRateColumn {
                get {
                    return this.columnFlowRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CurrentPolarityColumn {
                get {
                    return this.columnCurrentPolarity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VoltsColumn {
                get {
                    return this.columnVolts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TravelSpeedColumn {
                get {
                    return this.columnTravelSpeed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BaseMetalColumn {
                get {
                    return this.columnBaseMetal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Element_MIN_CColumn {
                get {
                    return this.columnElement_MIN_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Element_MIN_SIColumn {
                get {
                    return this.columnElement_MIN_SI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Element_MIN_MNColumn {
                get {
                    return this.columnElement_MIN_MN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Element_MIN_PColumn {
                get {
                    return this.columnElement_MIN_P;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Element_MIN_SColumn {
                get {
                    return this.columnElement_MIN_S;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Element_MIN_NIColumn {
                get {
                    return this.columnElement_MIN_NI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Element_MIN_CRColumn {
                get {
                    return this.columnElement_MIN_CR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Element_MIN_MOColumn {
                get {
                    return this.columnElement_MIN_MO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Element_MIN_CUColumn {
                get {
                    return this.columnElement_MIN_CU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Element_MAX_CColumn {
                get {
                    return this.columnElement_MAX_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Element_MAX_SIColumn {
                get {
                    return this.columnElement_MAX_SI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Element_MAX_MNColumn {
                get {
                    return this.columnElement_MAX_MN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Element_MAX_PColumn {
                get {
                    return this.columnElement_MAX_P;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Element_MAX_SColumn {
                get {
                    return this.columnElement_MAX_S;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Element_MAX_NIColumn {
                get {
                    return this.columnElement_MAX_NI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Element_MAX_CRColumn {
                get {
                    return this.columnElement_MAX_CR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Element_MAX_MOColumn {
                get {
                    return this.columnElement_MAX_MO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Element_MAX_CUColumn {
                get {
                    return this.columnElement_MAX_CU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Test_MIN_UTSColumn {
                get {
                    return this.columnTest_MIN_UTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Test_MIN_YSColumn {
                get {
                    return this.columnTest_MIN_YS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Test_MIN_ElongationColumn {
                get {
                    return this.columnTest_MIN_Elongation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Test_MAX_UTSColumn {
                get {
                    return this.columnTest_MAX_UTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Test_MAX_YSColumn {
                get {
                    return this.columnTest_MAX_YS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Test_MAX_ElongationColumn {
                get {
                    return this.columnTest_MAX_Elongation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Test_TempColumn {
                get {
                    return this.columnTest_Temp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Test_ImpectValueColumn {
                get {
                    return this.columnTest_ImpectValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Test_ConditionColumn {
                get {
                    return this.columnTest_Condition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Size_StandardValueColumn {
                get {
                    return this.columnSize_StandardValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Size_ActualValueColumn {
                get {
                    return this.columnSize_ActualValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Coating_StandardValueColumn {
                get {
                    return this.columnCoating_StandardValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Coating_ActualValueColumn {
                get {
                    return this.columnCoating_ActualValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UTSWire_StandardValueColumn {
                get {
                    return this.columnUTSWire_StandardValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UTSWire_ActualValueColumn {
                get {
                    return this.columnUTSWire_ActualValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CastDia_StandardValueColumn {
                get {
                    return this.columnCastDia_StandardValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CastDia_ActualValueColumn {
                get {
                    return this.columnCastDia_ActualValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Helix_StandardValueColumn {
                get {
                    return this.columnHelix_StandardValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Helix_ActualValueColumn {
                get {
                    return this.columnHelix_ActualValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OtherTest_Radio_SpecsColumn {
                get {
                    return this.columnOtherTest_Radio_Specs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OtherTest_FaceBend_SpecsColumn {
                get {
                    return this.columnOtherTest_FaceBend_Specs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OtherTest_Filled_SpecsColumn {
                get {
                    return this.columnOtherTest_Filled_Specs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsApprovedColumn {
                get {
                    return this.columnIsApproved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HideSectionColumn {
                get {
                    return this.columnHideSection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CombineBatchNoColumn {
                get {
                    return this.columnCombineBatchNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Certificate_TypeColumn {
                get {
                    return this.columnCertificate_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Created_DateColumn {
                get {
                    return this.columnCreated_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Created_ByColumn {
                get {
                    return this.columnCreated_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Modified_DateColumn {
                get {
                    return this.columnModified_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Modified_ByColumn {
                get {
                    return this.columnModified_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Approved_ByColumn {
                get {
                    return this.columnApproved_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Approved_DateColumn {
                get {
                    return this.columnApproved_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsShowCELogoColumn {
                get {
                    return this.columnIsShowCELogo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Tally_ItemNameColumn {
                get {
                    return this.columnTally_ItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GradeTypeColumn {
                get {
                    return this.columnGradeType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsShowMigColumn {
                get {
                    return this.columnIsShowMig;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsShowFluxColumn {
                get {
                    return this.columnIsShowFlux;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsShowNoneColumn {
                get {
                    return this.columnIsShowNone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public TestCertificateRecordRow this[int index] {
                get {
                    return ((TestCertificateRecordRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event TestCertificateRecordRowChangeEventHandler TestCertificateRecordRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event TestCertificateRecordRowChangeEventHandler TestCertificateRecordRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event TestCertificateRecordRowChangeEventHandler TestCertificateRecordRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event TestCertificateRecordRowChangeEventHandler TestCertificateRecordRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddTestCertificateRecordRow(TestCertificateRecordRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public TestCertificateRecordRow AddTestCertificateRecordRow(
                        string CertificateNo, 
                        string CustomerName, 
                        System.DateTime IssueDate, 
                        string Quanity, 
                        string InvoiceNo, 
                        string TradeDesignation, 
                        string Size, 
                        string BatchDate, 
                        string BatchNo, 
                        System.DateTime ManufecturingDate, 
                        string Specification, 
                        string WeldingProcess, 
                        string ShieldingGas, 
                        string PreHeatInerpassTemp, 
                        string Type, 
                        string APMS, 
                        string FlowRate, 
                        string CurrentPolarity, 
                        string Volts, 
                        string TravelSpeed, 
                        string BaseMetal, 
                        string Element_MIN_C, 
                        string Element_MIN_SI, 
                        string Element_MIN_MN, 
                        string Element_MIN_P, 
                        string Element_MIN_S, 
                        string Element_MIN_NI, 
                        string Element_MIN_CR, 
                        string Element_MIN_MO, 
                        string Element_MIN_CU, 
                        string Element_MAX_C, 
                        string Element_MAX_SI, 
                        string Element_MAX_MN, 
                        string Element_MAX_P, 
                        string Element_MAX_S, 
                        string Element_MAX_NI, 
                        string Element_MAX_CR, 
                        string Element_MAX_MO, 
                        string Element_MAX_CU, 
                        string Test_MIN_UTS, 
                        string Test_MIN_YS, 
                        string Test_MIN_Elongation, 
                        string Test_MAX_UTS, 
                        string Test_MAX_YS, 
                        string Test_MAX_Elongation, 
                        string Test_Temp, 
                        string Test_ImpectValue, 
                        string Test_Condition, 
                        string Size_StandardValue, 
                        string Size_ActualValue, 
                        string Coating_StandardValue, 
                        string Coating_ActualValue, 
                        string UTSWire_StandardValue, 
                        string UTSWire_ActualValue, 
                        string CastDia_StandardValue, 
                        string CastDia_ActualValue, 
                        string Helix_StandardValue, 
                        string Helix_ActualValue, 
                        string OtherTest_Radio_Specs, 
                        string OtherTest_FaceBend_Specs, 
                        string OtherTest_Filled_Specs, 
                        string Remarks, 
                        int IsApproved, 
                        string HideSection, 
                        string CombineBatchNo, 
                        string Certificate_Type, 
                        System.DateTime Created_Date, 
                        string Created_By, 
                        System.DateTime Modified_Date, 
                        string Modified_By, 
                        string Approved_By, 
                        System.DateTime Approved_Date, 
                        string IsShowCELogo, 
                        string Tally_ItemName, 
                        string GradeType, 
                        string IsShowMig, 
                        string IsShowFlux, 
                        string IsShowNone) {
                TestCertificateRecordRow rowTestCertificateRecordRow = ((TestCertificateRecordRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CertificateNo,
                        CustomerName,
                        IssueDate,
                        Quanity,
                        InvoiceNo,
                        TradeDesignation,
                        Size,
                        BatchDate,
                        BatchNo,
                        ManufecturingDate,
                        Specification,
                        WeldingProcess,
                        ShieldingGas,
                        PreHeatInerpassTemp,
                        Type,
                        APMS,
                        FlowRate,
                        CurrentPolarity,
                        Volts,
                        TravelSpeed,
                        BaseMetal,
                        Element_MIN_C,
                        Element_MIN_SI,
                        Element_MIN_MN,
                        Element_MIN_P,
                        Element_MIN_S,
                        Element_MIN_NI,
                        Element_MIN_CR,
                        Element_MIN_MO,
                        Element_MIN_CU,
                        Element_MAX_C,
                        Element_MAX_SI,
                        Element_MAX_MN,
                        Element_MAX_P,
                        Element_MAX_S,
                        Element_MAX_NI,
                        Element_MAX_CR,
                        Element_MAX_MO,
                        Element_MAX_CU,
                        Test_MIN_UTS,
                        Test_MIN_YS,
                        Test_MIN_Elongation,
                        Test_MAX_UTS,
                        Test_MAX_YS,
                        Test_MAX_Elongation,
                        Test_Temp,
                        Test_ImpectValue,
                        Test_Condition,
                        Size_StandardValue,
                        Size_ActualValue,
                        Coating_StandardValue,
                        Coating_ActualValue,
                        UTSWire_StandardValue,
                        UTSWire_ActualValue,
                        CastDia_StandardValue,
                        CastDia_ActualValue,
                        Helix_StandardValue,
                        Helix_ActualValue,
                        OtherTest_Radio_Specs,
                        OtherTest_FaceBend_Specs,
                        OtherTest_Filled_Specs,
                        Remarks,
                        IsApproved,
                        HideSection,
                        CombineBatchNo,
                        Certificate_Type,
                        Created_Date,
                        Created_By,
                        Modified_Date,
                        Modified_By,
                        Approved_By,
                        Approved_Date,
                        IsShowCELogo,
                        Tally_ItemName,
                        GradeType,
                        IsShowMig,
                        IsShowFlux,
                        IsShowNone};
                rowTestCertificateRecordRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTestCertificateRecordRow);
                return rowTestCertificateRecordRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public TestCertificateRecordRow FindById(int Id) {
                return ((TestCertificateRecordRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TestCertificateRecordDataTable cln = ((TestCertificateRecordDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TestCertificateRecordDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnCertificateNo = base.Columns["CertificateNo"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnIssueDate = base.Columns["IssueDate"];
                this.columnQuanity = base.Columns["Quanity"];
                this.columnInvoiceNo = base.Columns["InvoiceNo"];
                this.columnTradeDesignation = base.Columns["TradeDesignation"];
                this.columnSize = base.Columns["Size"];
                this.columnBatchDate = base.Columns["BatchDate"];
                this.columnBatchNo = base.Columns["BatchNo"];
                this.columnManufecturingDate = base.Columns["ManufecturingDate"];
                this.columnSpecification = base.Columns["Specification"];
                this.columnWeldingProcess = base.Columns["WeldingProcess"];
                this.columnShieldingGas = base.Columns["ShieldingGas"];
                this.columnPreHeatInerpassTemp = base.Columns["PreHeatInerpassTemp"];
                this.columnType = base.Columns["Type"];
                this.columnAPMS = base.Columns["APMS"];
                this.columnFlowRate = base.Columns["FlowRate"];
                this.columnCurrentPolarity = base.Columns["CurrentPolarity"];
                this.columnVolts = base.Columns["Volts"];
                this.columnTravelSpeed = base.Columns["TravelSpeed"];
                this.columnBaseMetal = base.Columns["BaseMetal"];
                this.columnElement_MIN_C = base.Columns["Element_MIN_C"];
                this.columnElement_MIN_SI = base.Columns["Element_MIN_SI"];
                this.columnElement_MIN_MN = base.Columns["Element_MIN_MN"];
                this.columnElement_MIN_P = base.Columns["Element_MIN_P"];
                this.columnElement_MIN_S = base.Columns["Element_MIN_S"];
                this.columnElement_MIN_NI = base.Columns["Element_MIN_NI"];
                this.columnElement_MIN_CR = base.Columns["Element_MIN_CR"];
                this.columnElement_MIN_MO = base.Columns["Element_MIN_MO"];
                this.columnElement_MIN_CU = base.Columns["Element_MIN_CU"];
                this.columnElement_MAX_C = base.Columns["Element_MAX_C"];
                this.columnElement_MAX_SI = base.Columns["Element_MAX_SI"];
                this.columnElement_MAX_MN = base.Columns["Element_MAX_MN"];
                this.columnElement_MAX_P = base.Columns["Element_MAX_P"];
                this.columnElement_MAX_S = base.Columns["Element_MAX_S"];
                this.columnElement_MAX_NI = base.Columns["Element_MAX_NI"];
                this.columnElement_MAX_CR = base.Columns["Element_MAX_CR"];
                this.columnElement_MAX_MO = base.Columns["Element_MAX_MO"];
                this.columnElement_MAX_CU = base.Columns["Element_MAX_CU"];
                this.columnTest_MIN_UTS = base.Columns["Test_MIN_UTS"];
                this.columnTest_MIN_YS = base.Columns["Test_MIN_YS"];
                this.columnTest_MIN_Elongation = base.Columns["Test_MIN_Elongation"];
                this.columnTest_MAX_UTS = base.Columns["Test_MAX_UTS"];
                this.columnTest_MAX_YS = base.Columns["Test_MAX_YS"];
                this.columnTest_MAX_Elongation = base.Columns["Test_MAX_Elongation"];
                this.columnTest_Temp = base.Columns["Test_Temp"];
                this.columnTest_ImpectValue = base.Columns["Test_ImpectValue"];
                this.columnTest_Condition = base.Columns["Test_Condition"];
                this.columnSize_StandardValue = base.Columns["Size_StandardValue"];
                this.columnSize_ActualValue = base.Columns["Size_ActualValue"];
                this.columnCoating_StandardValue = base.Columns["Coating_StandardValue"];
                this.columnCoating_ActualValue = base.Columns["Coating_ActualValue"];
                this.columnUTSWire_StandardValue = base.Columns["UTSWire_StandardValue"];
                this.columnUTSWire_ActualValue = base.Columns["UTSWire_ActualValue"];
                this.columnCastDia_StandardValue = base.Columns["CastDia_StandardValue"];
                this.columnCastDia_ActualValue = base.Columns["CastDia_ActualValue"];
                this.columnHelix_StandardValue = base.Columns["Helix_StandardValue"];
                this.columnHelix_ActualValue = base.Columns["Helix_ActualValue"];
                this.columnOtherTest_Radio_Specs = base.Columns["OtherTest_Radio_Specs"];
                this.columnOtherTest_FaceBend_Specs = base.Columns["OtherTest_FaceBend_Specs"];
                this.columnOtherTest_Filled_Specs = base.Columns["OtherTest_Filled_Specs"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnIsApproved = base.Columns["IsApproved"];
                this.columnHideSection = base.Columns["HideSection"];
                this.columnCombineBatchNo = base.Columns["CombineBatchNo"];
                this.columnCertificate_Type = base.Columns["Certificate_Type"];
                this.columnCreated_Date = base.Columns["Created_Date"];
                this.columnCreated_By = base.Columns["Created_By"];
                this.columnModified_Date = base.Columns["Modified_Date"];
                this.columnModified_By = base.Columns["Modified_By"];
                this.columnApproved_By = base.Columns["Approved_By"];
                this.columnApproved_Date = base.Columns["Approved_Date"];
                this.columnIsShowCELogo = base.Columns["IsShowCELogo"];
                this.columnTally_ItemName = base.Columns["Tally_ItemName"];
                this.columnGradeType = base.Columns["GradeType"];
                this.columnIsShowMig = base.Columns["IsShowMig"];
                this.columnIsShowFlux = base.Columns["IsShowFlux"];
                this.columnIsShowNone = base.Columns["IsShowNone"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnCertificateNo = new global::System.Data.DataColumn("CertificateNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCertificateNo);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnIssueDate = new global::System.Data.DataColumn("IssueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueDate);
                this.columnQuanity = new global::System.Data.DataColumn("Quanity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuanity);
                this.columnInvoiceNo = new global::System.Data.DataColumn("InvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNo);
                this.columnTradeDesignation = new global::System.Data.DataColumn("TradeDesignation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeDesignation);
                this.columnSize = new global::System.Data.DataColumn("Size", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize);
                this.columnBatchDate = new global::System.Data.DataColumn("BatchDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchDate);
                this.columnBatchNo = new global::System.Data.DataColumn("BatchNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchNo);
                this.columnManufecturingDate = new global::System.Data.DataColumn("ManufecturingDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufecturingDate);
                this.columnSpecification = new global::System.Data.DataColumn("Specification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecification);
                this.columnWeldingProcess = new global::System.Data.DataColumn("WeldingProcess", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeldingProcess);
                this.columnShieldingGas = new global::System.Data.DataColumn("ShieldingGas", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShieldingGas);
                this.columnPreHeatInerpassTemp = new global::System.Data.DataColumn("PreHeatInerpassTemp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreHeatInerpassTemp);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnAPMS = new global::System.Data.DataColumn("APMS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPMS);
                this.columnFlowRate = new global::System.Data.DataColumn("FlowRate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlowRate);
                this.columnCurrentPolarity = new global::System.Data.DataColumn("CurrentPolarity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentPolarity);
                this.columnVolts = new global::System.Data.DataColumn("Volts", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolts);
                this.columnTravelSpeed = new global::System.Data.DataColumn("TravelSpeed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTravelSpeed);
                this.columnBaseMetal = new global::System.Data.DataColumn("BaseMetal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseMetal);
                this.columnElement_MIN_C = new global::System.Data.DataColumn("Element_MIN_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElement_MIN_C);
                this.columnElement_MIN_SI = new global::System.Data.DataColumn("Element_MIN_SI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElement_MIN_SI);
                this.columnElement_MIN_MN = new global::System.Data.DataColumn("Element_MIN_MN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElement_MIN_MN);
                this.columnElement_MIN_P = new global::System.Data.DataColumn("Element_MIN_P", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElement_MIN_P);
                this.columnElement_MIN_S = new global::System.Data.DataColumn("Element_MIN_S", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElement_MIN_S);
                this.columnElement_MIN_NI = new global::System.Data.DataColumn("Element_MIN_NI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElement_MIN_NI);
                this.columnElement_MIN_CR = new global::System.Data.DataColumn("Element_MIN_CR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElement_MIN_CR);
                this.columnElement_MIN_MO = new global::System.Data.DataColumn("Element_MIN_MO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElement_MIN_MO);
                this.columnElement_MIN_CU = new global::System.Data.DataColumn("Element_MIN_CU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElement_MIN_CU);
                this.columnElement_MAX_C = new global::System.Data.DataColumn("Element_MAX_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElement_MAX_C);
                this.columnElement_MAX_SI = new global::System.Data.DataColumn("Element_MAX_SI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElement_MAX_SI);
                this.columnElement_MAX_MN = new global::System.Data.DataColumn("Element_MAX_MN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElement_MAX_MN);
                this.columnElement_MAX_P = new global::System.Data.DataColumn("Element_MAX_P", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElement_MAX_P);
                this.columnElement_MAX_S = new global::System.Data.DataColumn("Element_MAX_S", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElement_MAX_S);
                this.columnElement_MAX_NI = new global::System.Data.DataColumn("Element_MAX_NI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElement_MAX_NI);
                this.columnElement_MAX_CR = new global::System.Data.DataColumn("Element_MAX_CR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElement_MAX_CR);
                this.columnElement_MAX_MO = new global::System.Data.DataColumn("Element_MAX_MO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElement_MAX_MO);
                this.columnElement_MAX_CU = new global::System.Data.DataColumn("Element_MAX_CU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElement_MAX_CU);
                this.columnTest_MIN_UTS = new global::System.Data.DataColumn("Test_MIN_UTS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTest_MIN_UTS);
                this.columnTest_MIN_YS = new global::System.Data.DataColumn("Test_MIN_YS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTest_MIN_YS);
                this.columnTest_MIN_Elongation = new global::System.Data.DataColumn("Test_MIN_Elongation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTest_MIN_Elongation);
                this.columnTest_MAX_UTS = new global::System.Data.DataColumn("Test_MAX_UTS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTest_MAX_UTS);
                this.columnTest_MAX_YS = new global::System.Data.DataColumn("Test_MAX_YS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTest_MAX_YS);
                this.columnTest_MAX_Elongation = new global::System.Data.DataColumn("Test_MAX_Elongation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTest_MAX_Elongation);
                this.columnTest_Temp = new global::System.Data.DataColumn("Test_Temp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTest_Temp);
                this.columnTest_ImpectValue = new global::System.Data.DataColumn("Test_ImpectValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTest_ImpectValue);
                this.columnTest_Condition = new global::System.Data.DataColumn("Test_Condition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTest_Condition);
                this.columnSize_StandardValue = new global::System.Data.DataColumn("Size_StandardValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize_StandardValue);
                this.columnSize_ActualValue = new global::System.Data.DataColumn("Size_ActualValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize_ActualValue);
                this.columnCoating_StandardValue = new global::System.Data.DataColumn("Coating_StandardValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoating_StandardValue);
                this.columnCoating_ActualValue = new global::System.Data.DataColumn("Coating_ActualValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoating_ActualValue);
                this.columnUTSWire_StandardValue = new global::System.Data.DataColumn("UTSWire_StandardValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUTSWire_StandardValue);
                this.columnUTSWire_ActualValue = new global::System.Data.DataColumn("UTSWire_ActualValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUTSWire_ActualValue);
                this.columnCastDia_StandardValue = new global::System.Data.DataColumn("CastDia_StandardValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCastDia_StandardValue);
                this.columnCastDia_ActualValue = new global::System.Data.DataColumn("CastDia_ActualValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCastDia_ActualValue);
                this.columnHelix_StandardValue = new global::System.Data.DataColumn("Helix_StandardValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHelix_StandardValue);
                this.columnHelix_ActualValue = new global::System.Data.DataColumn("Helix_ActualValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHelix_ActualValue);
                this.columnOtherTest_Radio_Specs = new global::System.Data.DataColumn("OtherTest_Radio_Specs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherTest_Radio_Specs);
                this.columnOtherTest_FaceBend_Specs = new global::System.Data.DataColumn("OtherTest_FaceBend_Specs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherTest_FaceBend_Specs);
                this.columnOtherTest_Filled_Specs = new global::System.Data.DataColumn("OtherTest_Filled_Specs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherTest_Filled_Specs);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnIsApproved = new global::System.Data.DataColumn("IsApproved", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsApproved);
                this.columnHideSection = new global::System.Data.DataColumn("HideSection", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHideSection);
                this.columnCombineBatchNo = new global::System.Data.DataColumn("CombineBatchNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCombineBatchNo);
                this.columnCertificate_Type = new global::System.Data.DataColumn("Certificate_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCertificate_Type);
                this.columnCreated_Date = new global::System.Data.DataColumn("Created_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_Date);
                this.columnCreated_By = new global::System.Data.DataColumn("Created_By", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_By);
                this.columnModified_Date = new global::System.Data.DataColumn("Modified_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_Date);
                this.columnModified_By = new global::System.Data.DataColumn("Modified_By", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_By);
                this.columnApproved_By = new global::System.Data.DataColumn("Approved_By", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApproved_By);
                this.columnApproved_Date = new global::System.Data.DataColumn("Approved_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApproved_Date);
                this.columnIsShowCELogo = new global::System.Data.DataColumn("IsShowCELogo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsShowCELogo);
                this.columnTally_ItemName = new global::System.Data.DataColumn("Tally_ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTally_ItemName);
                this.columnGradeType = new global::System.Data.DataColumn("GradeType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGradeType);
                this.columnIsShowMig = new global::System.Data.DataColumn("IsShowMig", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsShowMig);
                this.columnIsShowFlux = new global::System.Data.DataColumn("IsShowFlux", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsShowFlux);
                this.columnIsShowNone = new global::System.Data.DataColumn("IsShowNone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsShowNone);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnCertificateNo.MaxLength = 50;
                this.columnCustomerName.MaxLength = 150;
                this.columnQuanity.MaxLength = 50;
                this.columnInvoiceNo.MaxLength = 50;
                this.columnTradeDesignation.MaxLength = 100;
                this.columnSize.MaxLength = 50;
                this.columnBatchDate.MaxLength = 50;
                this.columnBatchNo.MaxLength = 50;
                this.columnSpecification.MaxLength = 50;
                this.columnWeldingProcess.MaxLength = 50;
                this.columnShieldingGas.MaxLength = 50;
                this.columnPreHeatInerpassTemp.MaxLength = 50;
                this.columnType.MaxLength = 50;
                this.columnAPMS.MaxLength = 50;
                this.columnFlowRate.MaxLength = 50;
                this.columnCurrentPolarity.MaxLength = 50;
                this.columnVolts.MaxLength = 50;
                this.columnTravelSpeed.MaxLength = 50;
                this.columnBaseMetal.MaxLength = 50;
                this.columnElement_MIN_C.MaxLength = 50;
                this.columnElement_MIN_SI.MaxLength = 50;
                this.columnElement_MIN_MN.MaxLength = 50;
                this.columnElement_MIN_P.MaxLength = 50;
                this.columnElement_MIN_S.MaxLength = 50;
                this.columnElement_MIN_NI.MaxLength = 50;
                this.columnElement_MIN_CR.MaxLength = 50;
                this.columnElement_MIN_MO.MaxLength = 50;
                this.columnElement_MIN_CU.MaxLength = 50;
                this.columnElement_MAX_C.MaxLength = 50;
                this.columnElement_MAX_SI.MaxLength = 50;
                this.columnElement_MAX_MN.MaxLength = 50;
                this.columnElement_MAX_P.MaxLength = 50;
                this.columnElement_MAX_S.MaxLength = 50;
                this.columnElement_MAX_NI.MaxLength = 50;
                this.columnElement_MAX_CR.MaxLength = 50;
                this.columnElement_MAX_MO.MaxLength = 50;
                this.columnElement_MAX_CU.MaxLength = 50;
                this.columnTest_MIN_UTS.MaxLength = 50;
                this.columnTest_MIN_YS.MaxLength = 50;
                this.columnTest_MIN_Elongation.MaxLength = 50;
                this.columnTest_MAX_UTS.MaxLength = 50;
                this.columnTest_MAX_YS.MaxLength = 50;
                this.columnTest_MAX_Elongation.MaxLength = 50;
                this.columnTest_Temp.MaxLength = 50;
                this.columnTest_ImpectValue.MaxLength = 50;
                this.columnTest_Condition.MaxLength = 50;
                this.columnSize_StandardValue.MaxLength = 50;
                this.columnSize_ActualValue.MaxLength = 50;
                this.columnCoating_StandardValue.MaxLength = 50;
                this.columnCoating_ActualValue.MaxLength = 50;
                this.columnUTSWire_StandardValue.MaxLength = 50;
                this.columnUTSWire_ActualValue.MaxLength = 50;
                this.columnCastDia_StandardValue.MaxLength = 50;
                this.columnCastDia_ActualValue.MaxLength = 50;
                this.columnHelix_StandardValue.MaxLength = 50;
                this.columnHelix_ActualValue.MaxLength = 50;
                this.columnOtherTest_Radio_Specs.MaxLength = 50;
                this.columnOtherTest_FaceBend_Specs.MaxLength = 50;
                this.columnOtherTest_Filled_Specs.MaxLength = 50;
                this.columnRemarks.MaxLength = 1000;
                this.columnHideSection.MaxLength = 5;
                this.columnCombineBatchNo.MaxLength = 100;
                this.columnCertificate_Type.MaxLength = 50;
                this.columnCreated_By.MaxLength = 20;
                this.columnModified_By.MaxLength = 20;
                this.columnApproved_By.MaxLength = 20;
                this.columnIsShowCELogo.MaxLength = 3;
                this.columnTally_ItemName.MaxLength = 1000;
                this.columnGradeType.MaxLength = 50;
                this.columnIsShowMig.MaxLength = 3;
                this.columnIsShowFlux.MaxLength = 3;
                this.columnIsShowNone.MaxLength = 3;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public TestCertificateRecordRow NewTestCertificateRecordRow() {
                return ((TestCertificateRecordRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TestCertificateRecordRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TestCertificateRecordRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TestCertificateRecordRowChanged != null)) {
                    this.TestCertificateRecordRowChanged(this, new TestCertificateRecordRowChangeEvent(((TestCertificateRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TestCertificateRecordRowChanging != null)) {
                    this.TestCertificateRecordRowChanging(this, new TestCertificateRecordRowChangeEvent(((TestCertificateRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TestCertificateRecordRowDeleted != null)) {
                    this.TestCertificateRecordRowDeleted(this, new TestCertificateRecordRowChangeEvent(((TestCertificateRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TestCertificateRecordRowDeleting != null)) {
                    this.TestCertificateRecordRowDeleting(this, new TestCertificateRecordRowChangeEvent(((TestCertificateRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveTestCertificateRecordRow(TestCertificateRecordRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ShakuntEnterprisesDataSet ds = new ShakuntEnterprisesDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TestCertificateRecordDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TestCertificateRecordRow : global::System.Data.DataRow {
            
            private TestCertificateRecordDataTable tableTestCertificateRecord;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal TestCertificateRecordRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTestCertificateRecord = ((TestCertificateRecordDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableTestCertificateRecord.IdColumn]));
                }
                set {
                    this[this.tableTestCertificateRecord.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CertificateNo {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.CertificateNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CertificateNo\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.CertificateNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime IssueDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTestCertificateRecord.IssueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueDate\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.IssueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Quanity {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.QuanityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quanity\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.QuanityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string InvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.InvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceNo\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.InvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TradeDesignation {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.TradeDesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradeDesignation\' in table \'TestCertificateRecord\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.TradeDesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Size {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.SizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.SizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string BatchDate {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.BatchDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BatchDate\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.BatchDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string BatchNo {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.BatchNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BatchNo\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.BatchNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime ManufecturingDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTestCertificateRecord.ManufecturingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManufecturingDate\' in table \'TestCertificateRecord\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.ManufecturingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Specification {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.SpecificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Specification\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.SpecificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string WeldingProcess {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.WeldingProcessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WeldingProcess\' in table \'TestCertificateRecord\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.WeldingProcessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ShieldingGas {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.ShieldingGasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShieldingGas\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.ShieldingGasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PreHeatInerpassTemp {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.PreHeatInerpassTempColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreHeatInerpassTemp\' in table \'TestCertificateRecord\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.PreHeatInerpassTempColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string APMS {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.APMSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'APMS\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.APMSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FlowRate {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.FlowRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FlowRate\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.FlowRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CurrentPolarity {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.CurrentPolarityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentPolarity\' in table \'TestCertificateRecord\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.CurrentPolarityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Volts {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.VoltsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Volts\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.VoltsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TravelSpeed {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.TravelSpeedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TravelSpeed\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.TravelSpeedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string BaseMetal {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.BaseMetalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseMetal\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.BaseMetalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Element_MIN_C {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Element_MIN_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Element_MIN_C\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Element_MIN_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Element_MIN_SI {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Element_MIN_SIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Element_MIN_SI\' in table \'TestCertificateRecord\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Element_MIN_SIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Element_MIN_MN {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Element_MIN_MNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Element_MIN_MN\' in table \'TestCertificateRecord\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Element_MIN_MNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Element_MIN_P {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Element_MIN_PColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Element_MIN_P\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Element_MIN_PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Element_MIN_S {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Element_MIN_SColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Element_MIN_S\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Element_MIN_SColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Element_MIN_NI {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Element_MIN_NIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Element_MIN_NI\' in table \'TestCertificateRecord\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Element_MIN_NIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Element_MIN_CR {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Element_MIN_CRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Element_MIN_CR\' in table \'TestCertificateRecord\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Element_MIN_CRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Element_MIN_MO {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Element_MIN_MOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Element_MIN_MO\' in table \'TestCertificateRecord\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Element_MIN_MOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Element_MIN_CU {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Element_MIN_CUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Element_MIN_CU\' in table \'TestCertificateRecord\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Element_MIN_CUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Element_MAX_C {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Element_MAX_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Element_MAX_C\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Element_MAX_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Element_MAX_SI {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Element_MAX_SIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Element_MAX_SI\' in table \'TestCertificateRecord\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Element_MAX_SIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Element_MAX_MN {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Element_MAX_MNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Element_MAX_MN\' in table \'TestCertificateRecord\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Element_MAX_MNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Element_MAX_P {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Element_MAX_PColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Element_MAX_P\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Element_MAX_PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Element_MAX_S {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Element_MAX_SColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Element_MAX_S\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Element_MAX_SColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Element_MAX_NI {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Element_MAX_NIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Element_MAX_NI\' in table \'TestCertificateRecord\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Element_MAX_NIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Element_MAX_CR {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Element_MAX_CRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Element_MAX_CR\' in table \'TestCertificateRecord\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Element_MAX_CRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Element_MAX_MO {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Element_MAX_MOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Element_MAX_MO\' in table \'TestCertificateRecord\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Element_MAX_MOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Element_MAX_CU {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Element_MAX_CUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Element_MAX_CU\' in table \'TestCertificateRecord\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Element_MAX_CUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Test_MIN_UTS {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Test_MIN_UTSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Test_MIN_UTS\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Test_MIN_UTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Test_MIN_YS {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Test_MIN_YSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Test_MIN_YS\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Test_MIN_YSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Test_MIN_Elongation {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Test_MIN_ElongationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Test_MIN_Elongation\' in table \'TestCertificateRecord\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Test_MIN_ElongationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Test_MAX_UTS {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Test_MAX_UTSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Test_MAX_UTS\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Test_MAX_UTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Test_MAX_YS {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Test_MAX_YSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Test_MAX_YS\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Test_MAX_YSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Test_MAX_Elongation {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Test_MAX_ElongationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Test_MAX_Elongation\' in table \'TestCertificateRecord\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Test_MAX_ElongationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Test_Temp {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Test_TempColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Test_Temp\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Test_TempColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Test_ImpectValue {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Test_ImpectValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Test_ImpectValue\' in table \'TestCertificateRecord\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Test_ImpectValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Test_Condition {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Test_ConditionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Test_Condition\' in table \'TestCertificateRecord\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Test_ConditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Size_StandardValue {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Size_StandardValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size_StandardValue\' in table \'TestCertificateRecord\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Size_StandardValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Size_ActualValue {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Size_ActualValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size_ActualValue\' in table \'TestCertificateRecord\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Size_ActualValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Coating_StandardValue {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Coating_StandardValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Coating_StandardValue\' in table \'TestCertificateRecord\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Coating_StandardValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Coating_ActualValue {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Coating_ActualValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Coating_ActualValue\' in table \'TestCertificateRecord\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Coating_ActualValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string UTSWire_StandardValue {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.UTSWire_StandardValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UTSWire_StandardValue\' in table \'TestCertificateRecord\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.UTSWire_StandardValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string UTSWire_ActualValue {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.UTSWire_ActualValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UTSWire_ActualValue\' in table \'TestCertificateRecord\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.UTSWire_ActualValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CastDia_StandardValue {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.CastDia_StandardValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CastDia_StandardValue\' in table \'TestCertificateRecord\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.CastDia_StandardValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CastDia_ActualValue {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.CastDia_ActualValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CastDia_ActualValue\' in table \'TestCertificateRecord\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.CastDia_ActualValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Helix_StandardValue {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Helix_StandardValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Helix_StandardValue\' in table \'TestCertificateRecord\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Helix_StandardValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Helix_ActualValue {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Helix_ActualValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Helix_ActualValue\' in table \'TestCertificateRecord\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Helix_ActualValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string OtherTest_Radio_Specs {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.OtherTest_Radio_SpecsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherTest_Radio_Specs\' in table \'TestCertificateRecord\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.OtherTest_Radio_SpecsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string OtherTest_FaceBend_Specs {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.OtherTest_FaceBend_SpecsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherTest_FaceBend_Specs\' in table \'TestCertificateRecord\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.OtherTest_FaceBend_SpecsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string OtherTest_Filled_Specs {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.OtherTest_Filled_SpecsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherTest_Filled_Specs\' in table \'TestCertificateRecord\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.OtherTest_Filled_SpecsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int IsApproved {
                get {
                    try {
                        return ((int)(this[this.tableTestCertificateRecord.IsApprovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsApproved\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.IsApprovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string HideSection {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.HideSectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HideSection\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.HideSectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CombineBatchNo {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.CombineBatchNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CombineBatchNo\' in table \'TestCertificateRecord\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.CombineBatchNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Certificate_Type {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Certificate_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Certificate_Type\' in table \'TestCertificateRecord\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Certificate_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Created_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTestCertificateRecord.Created_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created_Date\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Created_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Created_By {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Created_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created_By\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Created_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Modified_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTestCertificateRecord.Modified_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_Date\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Modified_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Modified_By {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Modified_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_By\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Modified_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Approved_By {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Approved_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Approved_By\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Approved_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Approved_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTestCertificateRecord.Approved_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Approved_Date\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Approved_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string IsShowCELogo {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.IsShowCELogoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsShowCELogo\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.IsShowCELogoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Tally_ItemName {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.Tally_ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tally_ItemName\' in table \'TestCertificateRecord\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.Tally_ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string GradeType {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.GradeTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GradeType\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.GradeTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string IsShowMig {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.IsShowMigColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsShowMig\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.IsShowMigColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string IsShowFlux {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.IsShowFluxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsShowFlux\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.IsShowFluxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string IsShowNone {
                get {
                    try {
                        return ((string)(this[this.tableTestCertificateRecord.IsShowNoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsShowNone\' in table \'TestCertificateRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestCertificateRecord.IsShowNoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCertificateNoNull() {
                return this.IsNull(this.tableTestCertificateRecord.CertificateNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCertificateNoNull() {
                this[this.tableTestCertificateRecord.CertificateNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableTestCertificateRecord.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCustomerNameNull() {
                this[this.tableTestCertificateRecord.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIssueDateNull() {
                return this.IsNull(this.tableTestCertificateRecord.IssueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIssueDateNull() {
                this[this.tableTestCertificateRecord.IssueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsQuanityNull() {
                return this.IsNull(this.tableTestCertificateRecord.QuanityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetQuanityNull() {
                this[this.tableTestCertificateRecord.QuanityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInvoiceNoNull() {
                return this.IsNull(this.tableTestCertificateRecord.InvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInvoiceNoNull() {
                this[this.tableTestCertificateRecord.InvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTradeDesignationNull() {
                return this.IsNull(this.tableTestCertificateRecord.TradeDesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTradeDesignationNull() {
                this[this.tableTestCertificateRecord.TradeDesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSizeNull() {
                return this.IsNull(this.tableTestCertificateRecord.SizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSizeNull() {
                this[this.tableTestCertificateRecord.SizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBatchDateNull() {
                return this.IsNull(this.tableTestCertificateRecord.BatchDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBatchDateNull() {
                this[this.tableTestCertificateRecord.BatchDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBatchNoNull() {
                return this.IsNull(this.tableTestCertificateRecord.BatchNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBatchNoNull() {
                this[this.tableTestCertificateRecord.BatchNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsManufecturingDateNull() {
                return this.IsNull(this.tableTestCertificateRecord.ManufecturingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetManufecturingDateNull() {
                this[this.tableTestCertificateRecord.ManufecturingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSpecificationNull() {
                return this.IsNull(this.tableTestCertificateRecord.SpecificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSpecificationNull() {
                this[this.tableTestCertificateRecord.SpecificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsWeldingProcessNull() {
                return this.IsNull(this.tableTestCertificateRecord.WeldingProcessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetWeldingProcessNull() {
                this[this.tableTestCertificateRecord.WeldingProcessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsShieldingGasNull() {
                return this.IsNull(this.tableTestCertificateRecord.ShieldingGasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetShieldingGasNull() {
                this[this.tableTestCertificateRecord.ShieldingGasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPreHeatInerpassTempNull() {
                return this.IsNull(this.tableTestCertificateRecord.PreHeatInerpassTempColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPreHeatInerpassTempNull() {
                this[this.tableTestCertificateRecord.PreHeatInerpassTempColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTypeNull() {
                return this.IsNull(this.tableTestCertificateRecord.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTypeNull() {
                this[this.tableTestCertificateRecord.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAPMSNull() {
                return this.IsNull(this.tableTestCertificateRecord.APMSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAPMSNull() {
                this[this.tableTestCertificateRecord.APMSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFlowRateNull() {
                return this.IsNull(this.tableTestCertificateRecord.FlowRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFlowRateNull() {
                this[this.tableTestCertificateRecord.FlowRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCurrentPolarityNull() {
                return this.IsNull(this.tableTestCertificateRecord.CurrentPolarityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCurrentPolarityNull() {
                this[this.tableTestCertificateRecord.CurrentPolarityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsVoltsNull() {
                return this.IsNull(this.tableTestCertificateRecord.VoltsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetVoltsNull() {
                this[this.tableTestCertificateRecord.VoltsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTravelSpeedNull() {
                return this.IsNull(this.tableTestCertificateRecord.TravelSpeedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTravelSpeedNull() {
                this[this.tableTestCertificateRecord.TravelSpeedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBaseMetalNull() {
                return this.IsNull(this.tableTestCertificateRecord.BaseMetalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBaseMetalNull() {
                this[this.tableTestCertificateRecord.BaseMetalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsElement_MIN_CNull() {
                return this.IsNull(this.tableTestCertificateRecord.Element_MIN_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetElement_MIN_CNull() {
                this[this.tableTestCertificateRecord.Element_MIN_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsElement_MIN_SINull() {
                return this.IsNull(this.tableTestCertificateRecord.Element_MIN_SIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetElement_MIN_SINull() {
                this[this.tableTestCertificateRecord.Element_MIN_SIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsElement_MIN_MNNull() {
                return this.IsNull(this.tableTestCertificateRecord.Element_MIN_MNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetElement_MIN_MNNull() {
                this[this.tableTestCertificateRecord.Element_MIN_MNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsElement_MIN_PNull() {
                return this.IsNull(this.tableTestCertificateRecord.Element_MIN_PColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetElement_MIN_PNull() {
                this[this.tableTestCertificateRecord.Element_MIN_PColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsElement_MIN_SNull() {
                return this.IsNull(this.tableTestCertificateRecord.Element_MIN_SColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetElement_MIN_SNull() {
                this[this.tableTestCertificateRecord.Element_MIN_SColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsElement_MIN_NINull() {
                return this.IsNull(this.tableTestCertificateRecord.Element_MIN_NIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetElement_MIN_NINull() {
                this[this.tableTestCertificateRecord.Element_MIN_NIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsElement_MIN_CRNull() {
                return this.IsNull(this.tableTestCertificateRecord.Element_MIN_CRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetElement_MIN_CRNull() {
                this[this.tableTestCertificateRecord.Element_MIN_CRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsElement_MIN_MONull() {
                return this.IsNull(this.tableTestCertificateRecord.Element_MIN_MOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetElement_MIN_MONull() {
                this[this.tableTestCertificateRecord.Element_MIN_MOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsElement_MIN_CUNull() {
                return this.IsNull(this.tableTestCertificateRecord.Element_MIN_CUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetElement_MIN_CUNull() {
                this[this.tableTestCertificateRecord.Element_MIN_CUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsElement_MAX_CNull() {
                return this.IsNull(this.tableTestCertificateRecord.Element_MAX_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetElement_MAX_CNull() {
                this[this.tableTestCertificateRecord.Element_MAX_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsElement_MAX_SINull() {
                return this.IsNull(this.tableTestCertificateRecord.Element_MAX_SIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetElement_MAX_SINull() {
                this[this.tableTestCertificateRecord.Element_MAX_SIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsElement_MAX_MNNull() {
                return this.IsNull(this.tableTestCertificateRecord.Element_MAX_MNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetElement_MAX_MNNull() {
                this[this.tableTestCertificateRecord.Element_MAX_MNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsElement_MAX_PNull() {
                return this.IsNull(this.tableTestCertificateRecord.Element_MAX_PColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetElement_MAX_PNull() {
                this[this.tableTestCertificateRecord.Element_MAX_PColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsElement_MAX_SNull() {
                return this.IsNull(this.tableTestCertificateRecord.Element_MAX_SColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetElement_MAX_SNull() {
                this[this.tableTestCertificateRecord.Element_MAX_SColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsElement_MAX_NINull() {
                return this.IsNull(this.tableTestCertificateRecord.Element_MAX_NIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetElement_MAX_NINull() {
                this[this.tableTestCertificateRecord.Element_MAX_NIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsElement_MAX_CRNull() {
                return this.IsNull(this.tableTestCertificateRecord.Element_MAX_CRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetElement_MAX_CRNull() {
                this[this.tableTestCertificateRecord.Element_MAX_CRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsElement_MAX_MONull() {
                return this.IsNull(this.tableTestCertificateRecord.Element_MAX_MOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetElement_MAX_MONull() {
                this[this.tableTestCertificateRecord.Element_MAX_MOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsElement_MAX_CUNull() {
                return this.IsNull(this.tableTestCertificateRecord.Element_MAX_CUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetElement_MAX_CUNull() {
                this[this.tableTestCertificateRecord.Element_MAX_CUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTest_MIN_UTSNull() {
                return this.IsNull(this.tableTestCertificateRecord.Test_MIN_UTSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTest_MIN_UTSNull() {
                this[this.tableTestCertificateRecord.Test_MIN_UTSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTest_MIN_YSNull() {
                return this.IsNull(this.tableTestCertificateRecord.Test_MIN_YSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTest_MIN_YSNull() {
                this[this.tableTestCertificateRecord.Test_MIN_YSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTest_MIN_ElongationNull() {
                return this.IsNull(this.tableTestCertificateRecord.Test_MIN_ElongationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTest_MIN_ElongationNull() {
                this[this.tableTestCertificateRecord.Test_MIN_ElongationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTest_MAX_UTSNull() {
                return this.IsNull(this.tableTestCertificateRecord.Test_MAX_UTSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTest_MAX_UTSNull() {
                this[this.tableTestCertificateRecord.Test_MAX_UTSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTest_MAX_YSNull() {
                return this.IsNull(this.tableTestCertificateRecord.Test_MAX_YSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTest_MAX_YSNull() {
                this[this.tableTestCertificateRecord.Test_MAX_YSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTest_MAX_ElongationNull() {
                return this.IsNull(this.tableTestCertificateRecord.Test_MAX_ElongationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTest_MAX_ElongationNull() {
                this[this.tableTestCertificateRecord.Test_MAX_ElongationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTest_TempNull() {
                return this.IsNull(this.tableTestCertificateRecord.Test_TempColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTest_TempNull() {
                this[this.tableTestCertificateRecord.Test_TempColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTest_ImpectValueNull() {
                return this.IsNull(this.tableTestCertificateRecord.Test_ImpectValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTest_ImpectValueNull() {
                this[this.tableTestCertificateRecord.Test_ImpectValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTest_ConditionNull() {
                return this.IsNull(this.tableTestCertificateRecord.Test_ConditionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTest_ConditionNull() {
                this[this.tableTestCertificateRecord.Test_ConditionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSize_StandardValueNull() {
                return this.IsNull(this.tableTestCertificateRecord.Size_StandardValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSize_StandardValueNull() {
                this[this.tableTestCertificateRecord.Size_StandardValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSize_ActualValueNull() {
                return this.IsNull(this.tableTestCertificateRecord.Size_ActualValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSize_ActualValueNull() {
                this[this.tableTestCertificateRecord.Size_ActualValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCoating_StandardValueNull() {
                return this.IsNull(this.tableTestCertificateRecord.Coating_StandardValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCoating_StandardValueNull() {
                this[this.tableTestCertificateRecord.Coating_StandardValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCoating_ActualValueNull() {
                return this.IsNull(this.tableTestCertificateRecord.Coating_ActualValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCoating_ActualValueNull() {
                this[this.tableTestCertificateRecord.Coating_ActualValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUTSWire_StandardValueNull() {
                return this.IsNull(this.tableTestCertificateRecord.UTSWire_StandardValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUTSWire_StandardValueNull() {
                this[this.tableTestCertificateRecord.UTSWire_StandardValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUTSWire_ActualValueNull() {
                return this.IsNull(this.tableTestCertificateRecord.UTSWire_ActualValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUTSWire_ActualValueNull() {
                this[this.tableTestCertificateRecord.UTSWire_ActualValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCastDia_StandardValueNull() {
                return this.IsNull(this.tableTestCertificateRecord.CastDia_StandardValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCastDia_StandardValueNull() {
                this[this.tableTestCertificateRecord.CastDia_StandardValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCastDia_ActualValueNull() {
                return this.IsNull(this.tableTestCertificateRecord.CastDia_ActualValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCastDia_ActualValueNull() {
                this[this.tableTestCertificateRecord.CastDia_ActualValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHelix_StandardValueNull() {
                return this.IsNull(this.tableTestCertificateRecord.Helix_StandardValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHelix_StandardValueNull() {
                this[this.tableTestCertificateRecord.Helix_StandardValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHelix_ActualValueNull() {
                return this.IsNull(this.tableTestCertificateRecord.Helix_ActualValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHelix_ActualValueNull() {
                this[this.tableTestCertificateRecord.Helix_ActualValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOtherTest_Radio_SpecsNull() {
                return this.IsNull(this.tableTestCertificateRecord.OtherTest_Radio_SpecsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOtherTest_Radio_SpecsNull() {
                this[this.tableTestCertificateRecord.OtherTest_Radio_SpecsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOtherTest_FaceBend_SpecsNull() {
                return this.IsNull(this.tableTestCertificateRecord.OtherTest_FaceBend_SpecsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOtherTest_FaceBend_SpecsNull() {
                this[this.tableTestCertificateRecord.OtherTest_FaceBend_SpecsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOtherTest_Filled_SpecsNull() {
                return this.IsNull(this.tableTestCertificateRecord.OtherTest_Filled_SpecsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOtherTest_Filled_SpecsNull() {
                this[this.tableTestCertificateRecord.OtherTest_Filled_SpecsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableTestCertificateRecord.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRemarksNull() {
                this[this.tableTestCertificateRecord.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIsApprovedNull() {
                return this.IsNull(this.tableTestCertificateRecord.IsApprovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIsApprovedNull() {
                this[this.tableTestCertificateRecord.IsApprovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHideSectionNull() {
                return this.IsNull(this.tableTestCertificateRecord.HideSectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHideSectionNull() {
                this[this.tableTestCertificateRecord.HideSectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCombineBatchNoNull() {
                return this.IsNull(this.tableTestCertificateRecord.CombineBatchNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCombineBatchNoNull() {
                this[this.tableTestCertificateRecord.CombineBatchNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCertificate_TypeNull() {
                return this.IsNull(this.tableTestCertificateRecord.Certificate_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCertificate_TypeNull() {
                this[this.tableTestCertificateRecord.Certificate_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCreated_DateNull() {
                return this.IsNull(this.tableTestCertificateRecord.Created_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCreated_DateNull() {
                this[this.tableTestCertificateRecord.Created_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCreated_ByNull() {
                return this.IsNull(this.tableTestCertificateRecord.Created_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCreated_ByNull() {
                this[this.tableTestCertificateRecord.Created_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModified_DateNull() {
                return this.IsNull(this.tableTestCertificateRecord.Modified_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModified_DateNull() {
                this[this.tableTestCertificateRecord.Modified_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsModified_ByNull() {
                return this.IsNull(this.tableTestCertificateRecord.Modified_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetModified_ByNull() {
                this[this.tableTestCertificateRecord.Modified_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsApproved_ByNull() {
                return this.IsNull(this.tableTestCertificateRecord.Approved_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetApproved_ByNull() {
                this[this.tableTestCertificateRecord.Approved_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsApproved_DateNull() {
                return this.IsNull(this.tableTestCertificateRecord.Approved_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetApproved_DateNull() {
                this[this.tableTestCertificateRecord.Approved_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIsShowCELogoNull() {
                return this.IsNull(this.tableTestCertificateRecord.IsShowCELogoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIsShowCELogoNull() {
                this[this.tableTestCertificateRecord.IsShowCELogoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTally_ItemNameNull() {
                return this.IsNull(this.tableTestCertificateRecord.Tally_ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTally_ItemNameNull() {
                this[this.tableTestCertificateRecord.Tally_ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGradeTypeNull() {
                return this.IsNull(this.tableTestCertificateRecord.GradeTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGradeTypeNull() {
                this[this.tableTestCertificateRecord.GradeTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIsShowMigNull() {
                return this.IsNull(this.tableTestCertificateRecord.IsShowMigColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIsShowMigNull() {
                this[this.tableTestCertificateRecord.IsShowMigColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIsShowFluxNull() {
                return this.IsNull(this.tableTestCertificateRecord.IsShowFluxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIsShowFluxNull() {
                this[this.tableTestCertificateRecord.IsShowFluxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIsShowNoneNull() {
                return this.IsNull(this.tableTestCertificateRecord.IsShowNoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIsShowNoneNull() {
                this[this.tableTestCertificateRecord.IsShowNoneColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class TestCertificateRecordRowChangeEvent : global::System.EventArgs {
            
            private TestCertificateRecordRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public TestCertificateRecordRowChangeEvent(TestCertificateRecordRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public TestCertificateRecordRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace RDLCDesign.ShakuntEnterprisesDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TestCertificateRecordTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public TestCertificateRecordTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TestCertificateRecord";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("CertificateNo", "CertificateNo");
            tableMapping.ColumnMappings.Add("CustomerName", "CustomerName");
            tableMapping.ColumnMappings.Add("IssueDate", "IssueDate");
            tableMapping.ColumnMappings.Add("Quanity", "Quanity");
            tableMapping.ColumnMappings.Add("InvoiceNo", "InvoiceNo");
            tableMapping.ColumnMappings.Add("TradeDesignation", "TradeDesignation");
            tableMapping.ColumnMappings.Add("Size", "Size");
            tableMapping.ColumnMappings.Add("BatchDate", "BatchDate");
            tableMapping.ColumnMappings.Add("BatchNo", "BatchNo");
            tableMapping.ColumnMappings.Add("ManufecturingDate", "ManufecturingDate");
            tableMapping.ColumnMappings.Add("Specification", "Specification");
            tableMapping.ColumnMappings.Add("WeldingProcess", "WeldingProcess");
            tableMapping.ColumnMappings.Add("ShieldingGas", "ShieldingGas");
            tableMapping.ColumnMappings.Add("PreHeatInerpassTemp", "PreHeatInerpassTemp");
            tableMapping.ColumnMappings.Add("Type", "Type");
            tableMapping.ColumnMappings.Add("APMS", "APMS");
            tableMapping.ColumnMappings.Add("FlowRate", "FlowRate");
            tableMapping.ColumnMappings.Add("CurrentPolarity", "CurrentPolarity");
            tableMapping.ColumnMappings.Add("Volts", "Volts");
            tableMapping.ColumnMappings.Add("TravelSpeed", "TravelSpeed");
            tableMapping.ColumnMappings.Add("BaseMetal", "BaseMetal");
            tableMapping.ColumnMappings.Add("Element_MIN_C", "Element_MIN_C");
            tableMapping.ColumnMappings.Add("Element_MIN_SI", "Element_MIN_SI");
            tableMapping.ColumnMappings.Add("Element_MIN_MN", "Element_MIN_MN");
            tableMapping.ColumnMappings.Add("Element_MIN_P", "Element_MIN_P");
            tableMapping.ColumnMappings.Add("Element_MIN_S", "Element_MIN_S");
            tableMapping.ColumnMappings.Add("Element_MIN_NI", "Element_MIN_NI");
            tableMapping.ColumnMappings.Add("Element_MIN_CR", "Element_MIN_CR");
            tableMapping.ColumnMappings.Add("Element_MIN_MO", "Element_MIN_MO");
            tableMapping.ColumnMappings.Add("Element_MIN_CU", "Element_MIN_CU");
            tableMapping.ColumnMappings.Add("Element_MAX_C", "Element_MAX_C");
            tableMapping.ColumnMappings.Add("Element_MAX_SI", "Element_MAX_SI");
            tableMapping.ColumnMappings.Add("Element_MAX_MN", "Element_MAX_MN");
            tableMapping.ColumnMappings.Add("Element_MAX_P", "Element_MAX_P");
            tableMapping.ColumnMappings.Add("Element_MAX_S", "Element_MAX_S");
            tableMapping.ColumnMappings.Add("Element_MAX_NI", "Element_MAX_NI");
            tableMapping.ColumnMappings.Add("Element_MAX_CR", "Element_MAX_CR");
            tableMapping.ColumnMappings.Add("Element_MAX_MO", "Element_MAX_MO");
            tableMapping.ColumnMappings.Add("Element_MAX_CU", "Element_MAX_CU");
            tableMapping.ColumnMappings.Add("Test_MIN_UTS", "Test_MIN_UTS");
            tableMapping.ColumnMappings.Add("Test_MIN_YS", "Test_MIN_YS");
            tableMapping.ColumnMappings.Add("Test_MIN_Elongation", "Test_MIN_Elongation");
            tableMapping.ColumnMappings.Add("Test_MAX_UTS", "Test_MAX_UTS");
            tableMapping.ColumnMappings.Add("Test_MAX_YS", "Test_MAX_YS");
            tableMapping.ColumnMappings.Add("Test_MAX_Elongation", "Test_MAX_Elongation");
            tableMapping.ColumnMappings.Add("Test_Temp", "Test_Temp");
            tableMapping.ColumnMappings.Add("Test_ImpectValue", "Test_ImpectValue");
            tableMapping.ColumnMappings.Add("Test_Condition", "Test_Condition");
            tableMapping.ColumnMappings.Add("Size_StandardValue", "Size_StandardValue");
            tableMapping.ColumnMappings.Add("Size_ActualValue", "Size_ActualValue");
            tableMapping.ColumnMappings.Add("Coating_StandardValue", "Coating_StandardValue");
            tableMapping.ColumnMappings.Add("Coating_ActualValue", "Coating_ActualValue");
            tableMapping.ColumnMappings.Add("UTSWire_StandardValue", "UTSWire_StandardValue");
            tableMapping.ColumnMappings.Add("UTSWire_ActualValue", "UTSWire_ActualValue");
            tableMapping.ColumnMappings.Add("CastDia_StandardValue", "CastDia_StandardValue");
            tableMapping.ColumnMappings.Add("CastDia_ActualValue", "CastDia_ActualValue");
            tableMapping.ColumnMappings.Add("Helix_StandardValue", "Helix_StandardValue");
            tableMapping.ColumnMappings.Add("Helix_ActualValue", "Helix_ActualValue");
            tableMapping.ColumnMappings.Add("OtherTest_Radio_Specs", "OtherTest_Radio_Specs");
            tableMapping.ColumnMappings.Add("OtherTest_FaceBend_Specs", "OtherTest_FaceBend_Specs");
            tableMapping.ColumnMappings.Add("OtherTest_Filled_Specs", "OtherTest_Filled_Specs");
            tableMapping.ColumnMappings.Add("Remarks", "Remarks");
            tableMapping.ColumnMappings.Add("IsApproved", "IsApproved");
            tableMapping.ColumnMappings.Add("HideSection", "HideSection");
            tableMapping.ColumnMappings.Add("CombineBatchNo", "CombineBatchNo");
            tableMapping.ColumnMappings.Add("Certificate_Type", "Certificate_Type");
            tableMapping.ColumnMappings.Add("Created_Date", "Created_Date");
            tableMapping.ColumnMappings.Add("Created_By", "Created_By");
            tableMapping.ColumnMappings.Add("Modified_Date", "Modified_Date");
            tableMapping.ColumnMappings.Add("Modified_By", "Modified_By");
            tableMapping.ColumnMappings.Add("Approved_By", "Approved_By");
            tableMapping.ColumnMappings.Add("Approved_Date", "Approved_Date");
            tableMapping.ColumnMappings.Add("IsShowCELogo", "IsShowCELogo");
            tableMapping.ColumnMappings.Add("Tally_ItemName", "Tally_ItemName");
            tableMapping.ColumnMappings.Add("GradeType", "GradeType");
            tableMapping.ColumnMappings.Add("IsShowMig", "IsShowMig");
            tableMapping.ColumnMappings.Add("IsShowFlux", "IsShowFlux");
            tableMapping.ColumnMappings.Add("IsShowNone", "IsShowNone");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TestCertificateRecord] WHERE (([Id] = @Original_Id) AND ((@IsN" +
                "ull_CertificateNo = 1 AND [CertificateNo] IS NULL) OR ([CertificateNo] = @Origin" +
                "al_CertificateNo)) AND ((@IsNull_CustomerName = 1 AND [CustomerName] IS NULL) OR" +
                " ([CustomerName] = @Original_CustomerName)) AND ((@IsNull_IssueDate = 1 AND [Iss" +
                "ueDate] IS NULL) OR ([IssueDate] = @Original_IssueDate)) AND ((@IsNull_Quanity =" +
                " 1 AND [Quanity] IS NULL) OR ([Quanity] = @Original_Quanity)) AND ((@IsNull_Invo" +
                "iceNo = 1 AND [InvoiceNo] IS NULL) OR ([InvoiceNo] = @Original_InvoiceNo)) AND (" +
                "(@IsNull_TradeDesignation = 1 AND [TradeDesignation] IS NULL) OR ([TradeDesignat" +
                "ion] = @Original_TradeDesignation)) AND ((@IsNull_Size = 1 AND [Size] IS NULL) O" +
                "R ([Size] = @Original_Size)) AND ((@IsNull_BatchDate = 1 AND [BatchDate] IS NULL" +
                ") OR ([BatchDate] = @Original_BatchDate)) AND ((@IsNull_BatchNo = 1 AND [BatchNo" +
                "] IS NULL) OR ([BatchNo] = @Original_BatchNo)) AND ((@IsNull_ManufecturingDate =" +
                " 1 AND [ManufecturingDate] IS NULL) OR ([ManufecturingDate] = @Original_Manufect" +
                "uringDate)) AND ((@IsNull_Specification = 1 AND [Specification] IS NULL) OR ([Sp" +
                "ecification] = @Original_Specification)) AND ((@IsNull_WeldingProcess = 1 AND [W" +
                "eldingProcess] IS NULL) OR ([WeldingProcess] = @Original_WeldingProcess)) AND ((" +
                "@IsNull_ShieldingGas = 1 AND [ShieldingGas] IS NULL) OR ([ShieldingGas] = @Origi" +
                "nal_ShieldingGas)) AND ((@IsNull_PreHeatInerpassTemp = 1 AND [PreHeatInerpassTem" +
                "p] IS NULL) OR ([PreHeatInerpassTemp] = @Original_PreHeatInerpassTemp)) AND ((@I" +
                "sNull_Type = 1 AND [Type] IS NULL) OR ([Type] = @Original_Type)) AND ((@IsNull_A" +
                "PMS = 1 AND [APMS] IS NULL) OR ([APMS] = @Original_APMS)) AND ((@IsNull_FlowRate" +
                " = 1 AND [FlowRate] IS NULL) OR ([FlowRate] = @Original_FlowRate)) AND ((@IsNull" +
                "_CurrentPolarity = 1 AND [CurrentPolarity] IS NULL) OR ([CurrentPolarity] = @Ori" +
                "ginal_CurrentPolarity)) AND ((@IsNull_Volts = 1 AND [Volts] IS NULL) OR ([Volts]" +
                " = @Original_Volts)) AND ((@IsNull_TravelSpeed = 1 AND [TravelSpeed] IS NULL) OR" +
                " ([TravelSpeed] = @Original_TravelSpeed)) AND ((@IsNull_BaseMetal = 1 AND [BaseM" +
                "etal] IS NULL) OR ([BaseMetal] = @Original_BaseMetal)) AND ((@IsNull_Element_MIN" +
                "_C = 1 AND [Element_MIN_C] IS NULL) OR ([Element_MIN_C] = @Original_Element_MIN_" +
                "C)) AND ((@IsNull_Element_MIN_SI = 1 AND [Element_MIN_SI] IS NULL) OR ([Element_" +
                "MIN_SI] = @Original_Element_MIN_SI)) AND ((@IsNull_Element_MIN_MN = 1 AND [Eleme" +
                "nt_MIN_MN] IS NULL) OR ([Element_MIN_MN] = @Original_Element_MIN_MN)) AND ((@IsN" +
                "ull_Element_MIN_P = 1 AND [Element_MIN_P] IS NULL) OR ([Element_MIN_P] = @Origin" +
                "al_Element_MIN_P)) AND ((@IsNull_Element_MIN_S = 1 AND [Element_MIN_S] IS NULL) " +
                "OR ([Element_MIN_S] = @Original_Element_MIN_S)) AND ((@IsNull_Element_MIN_NI = 1" +
                " AND [Element_MIN_NI] IS NULL) OR ([Element_MIN_NI] = @Original_Element_MIN_NI))" +
                " AND ((@IsNull_Element_MIN_CR = 1 AND [Element_MIN_CR] IS NULL) OR ([Element_MIN" +
                "_CR] = @Original_Element_MIN_CR)) AND ((@IsNull_Element_MIN_MO = 1 AND [Element_" +
                "MIN_MO] IS NULL) OR ([Element_MIN_MO] = @Original_Element_MIN_MO)) AND ((@IsNull" +
                "_Element_MIN_CU = 1 AND [Element_MIN_CU] IS NULL) OR ([Element_MIN_CU] = @Origin" +
                "al_Element_MIN_CU)) AND ((@IsNull_Element_MAX_C = 1 AND [Element_MAX_C] IS NULL)" +
                " OR ([Element_MAX_C] = @Original_Element_MAX_C)) AND ((@IsNull_Element_MAX_SI = " +
                "1 AND [Element_MAX_SI] IS NULL) OR ([Element_MAX_SI] = @Original_Element_MAX_SI)" +
                ") AND ((@IsNull_Element_MAX_MN = 1 AND [Element_MAX_MN] IS NULL) OR ([Element_MA" +
                "X_MN] = @Original_Element_MAX_MN)) AND ((@IsNull_Element_MAX_P = 1 AND [Element_" +
                "MAX_P] IS NULL) OR ([Element_MAX_P] = @Original_Element_MAX_P)) AND ((@IsNull_El" +
                "ement_MAX_S = 1 AND [Element_MAX_S] IS NULL) OR ([Element_MAX_S] = @Original_Ele" +
                "ment_MAX_S)) AND ((@IsNull_Element_MAX_NI = 1 AND [Element_MAX_NI] IS NULL) OR (" +
                "[Element_MAX_NI] = @Original_Element_MAX_NI)) AND ((@IsNull_Element_MAX_CR = 1 A" +
                "ND [Element_MAX_CR] IS NULL) OR ([Element_MAX_CR] = @Original_Element_MAX_CR)) A" +
                "ND ((@IsNull_Element_MAX_MO = 1 AND [Element_MAX_MO] IS NULL) OR ([Element_MAX_M" +
                "O] = @Original_Element_MAX_MO)) AND ((@IsNull_Element_MAX_CU = 1 AND [Element_MA" +
                "X_CU] IS NULL) OR ([Element_MAX_CU] = @Original_Element_MAX_CU)) AND ((@IsNull_T" +
                "est_MIN_UTS = 1 AND [Test_MIN_UTS] IS NULL) OR ([Test_MIN_UTS] = @Original_Test_" +
                "MIN_UTS)) AND ((@IsNull_Test_MIN_YS = 1 AND [Test_MIN_YS] IS NULL) OR ([Test_MIN" +
                "_YS] = @Original_Test_MIN_YS)) AND ((@IsNull_Test_MIN_Elongation = 1 AND [Test_M" +
                "IN_Elongation] IS NULL) OR ([Test_MIN_Elongation] = @Original_Test_MIN_Elongatio" +
                "n)) AND ((@IsNull_Test_MAX_UTS = 1 AND [Test_MAX_UTS] IS NULL) OR ([Test_MAX_UTS" +
                "] = @Original_Test_MAX_UTS)) AND ((@IsNull_Test_MAX_YS = 1 AND [Test_MAX_YS] IS " +
                "NULL) OR ([Test_MAX_YS] = @Original_Test_MAX_YS)) AND ((@IsNull_Test_MAX_Elongat" +
                "ion = 1 AND [Test_MAX_Elongation] IS NULL) OR ([Test_MAX_Elongation] = @Original" +
                "_Test_MAX_Elongation)) AND ((@IsNull_Test_Temp = 1 AND [Test_Temp] IS NULL) OR (" +
                "[Test_Temp] = @Original_Test_Temp)) AND ((@IsNull_Test_ImpectValue = 1 AND [Test" +
                "_ImpectValue] IS NULL) OR ([Test_ImpectValue] = @Original_Test_ImpectValue)) AND" +
                " ((@IsNull_Test_Condition = 1 AND [Test_Condition] IS NULL) OR ([Test_Condition]" +
                " = @Original_Test_Condition)) AND ((@IsNull_Size_StandardValue = 1 AND [Size_Sta" +
                "ndardValue] IS NULL) OR ([Size_StandardValue] = @Original_Size_StandardValue)) A" +
                "ND ((@IsNull_Size_ActualValue = 1 AND [Size_ActualValue] IS NULL) OR ([Size_Actu" +
                "alValue] = @Original_Size_ActualValue)) AND ((@IsNull_Coating_StandardValue = 1 " +
                "AND [Coating_StandardValue] IS NULL) OR ([Coating_StandardValue] = @Original_Coa" +
                "ting_StandardValue)) AND ((@IsNull_Coating_ActualValue = 1 AND [Coating_ActualVa" +
                "lue] IS NULL) OR ([Coating_ActualValue] = @Original_Coating_ActualValue)) AND ((" +
                "@IsNull_UTSWire_StandardValue = 1 AND [UTSWire_StandardValue] IS NULL) OR ([UTSW" +
                "ire_StandardValue] = @Original_UTSWire_StandardValue)) AND ((@IsNull_UTSWire_Act" +
                "ualValue = 1 AND [UTSWire_ActualValue] IS NULL) OR ([UTSWire_ActualValue] = @Ori" +
                "ginal_UTSWire_ActualValue)) AND ((@IsNull_CastDia_StandardValue = 1 AND [CastDia" +
                "_StandardValue] IS NULL) OR ([CastDia_StandardValue] = @Original_CastDia_Standar" +
                "dValue)) AND ((@IsNull_CastDia_ActualValue = 1 AND [CastDia_ActualValue] IS NULL" +
                ") OR ([CastDia_ActualValue] = @Original_CastDia_ActualValue)) AND ((@IsNull_Heli" +
                "x_StandardValue = 1 AND [Helix_StandardValue] IS NULL) OR ([Helix_StandardValue]" +
                " = @Original_Helix_StandardValue)) AND ((@IsNull_Helix_ActualValue = 1 AND [Heli" +
                "x_ActualValue] IS NULL) OR ([Helix_ActualValue] = @Original_Helix_ActualValue)) " +
                "AND ((@IsNull_OtherTest_Radio_Specs = 1 AND [OtherTest_Radio_Specs] IS NULL) OR " +
                "([OtherTest_Radio_Specs] = @Original_OtherTest_Radio_Specs)) AND ((@IsNull_Other" +
                "Test_FaceBend_Specs = 1 AND [OtherTest_FaceBend_Specs] IS NULL) OR ([OtherTest_F" +
                "aceBend_Specs] = @Original_OtherTest_FaceBend_Specs)) AND ((@IsNull_OtherTest_Fi" +
                "lled_Specs = 1 AND [OtherTest_Filled_Specs] IS NULL) OR ([OtherTest_Filled_Specs" +
                "] = @Original_OtherTest_Filled_Specs)) AND ((@IsNull_Remarks = 1 AND [Remarks] I" +
                "S NULL) OR ([Remarks] = @Original_Remarks)) AND ((@IsNull_IsApproved = 1 AND [Is" +
                "Approved] IS NULL) OR ([IsApproved] = @Original_IsApproved)) AND ((@IsNull_HideS" +
                "ection = 1 AND [HideSection] IS NULL) OR ([HideSection] = @Original_HideSection)" +
                ") AND ((@IsNull_CombineBatchNo = 1 AND [CombineBatchNo] IS NULL) OR ([CombineBat" +
                "chNo] = @Original_CombineBatchNo)) AND ((@IsNull_Certificate_Type = 1 AND [Certi" +
                "ficate_Type] IS NULL) OR ([Certificate_Type] = @Original_Certificate_Type)) AND " +
                "((@IsNull_Created_Date = 1 AND [Created_Date] IS NULL) OR ([Created_Date] = @Ori" +
                "ginal_Created_Date)) AND ((@IsNull_Created_By = 1 AND [Created_By] IS NULL) OR (" +
                "[Created_By] = @Original_Created_By)) AND ((@IsNull_Modified_Date = 1 AND [Modif" +
                "ied_Date] IS NULL) OR ([Modified_Date] = @Original_Modified_Date)) AND ((@IsNull" +
                "_Modified_By = 1 AND [Modified_By] IS NULL) OR ([Modified_By] = @Original_Modifi" +
                "ed_By)) AND ((@IsNull_Approved_By = 1 AND [Approved_By] IS NULL) OR ([Approved_B" +
                "y] = @Original_Approved_By)) AND ((@IsNull_Approved_Date = 1 AND [Approved_Date]" +
                " IS NULL) OR ([Approved_Date] = @Original_Approved_Date)) AND ((@IsNull_IsShowCE" +
                "Logo = 1 AND [IsShowCELogo] IS NULL) OR ([IsShowCELogo] = @Original_IsShowCELogo" +
                ")) AND ((@IsNull_Tally_ItemName = 1 AND [Tally_ItemName] IS NULL) OR ([Tally_Ite" +
                "mName] = @Original_Tally_ItemName)) AND ((@IsNull_GradeType = 1 AND [GradeType] " +
                "IS NULL) OR ([GradeType] = @Original_GradeType)) AND ((@IsNull_IsShowMig = 1 AND" +
                " [IsShowMig] IS NULL) OR ([IsShowMig] = @Original_IsShowMig)) AND ((@IsNull_IsSh" +
                "owFlux = 1 AND [IsShowFlux] IS NULL) OR ([IsShowFlux] = @Original_IsShowFlux)) A" +
                "ND ((@IsNull_IsShowNone = 1 AND [IsShowNone] IS NULL) OR ([IsShowNone] = @Origin" +
                "al_IsShowNone)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CertificateNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertificateNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomerName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IssueDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IssueDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IssueDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IssueDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Quanity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quanity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quanity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quanity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TradeDesignation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TradeDesignation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TradeDesignation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TradeDesignation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Size", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BatchDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BatchDate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BatchNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BatchNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ManufecturingDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufecturingDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ManufecturingDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufecturingDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Specification", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specification", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specification", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specification", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WeldingProcess", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeldingProcess", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WeldingProcess", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeldingProcess", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShieldingGas", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShieldingGas", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShieldingGas", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShieldingGas", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PreHeatInerpassTemp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PreHeatInerpassTemp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PreHeatInerpassTemp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PreHeatInerpassTemp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_APMS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APMS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APMS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APMS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FlowRate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FlowRate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FlowRate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FlowRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CurrentPolarity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrentPolarity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CurrentPolarity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrentPolarity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Volts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Volts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Volts", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Volts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TravelSpeed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TravelSpeed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TravelSpeed", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TravelSpeed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BaseMetal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseMetal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BaseMetal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseMetal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MIN_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MIN_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MIN_SI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_SI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MIN_SI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_SI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MIN_MN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_MN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MIN_MN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_MN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MIN_P", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_P", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MIN_P", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MIN_S", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_S", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MIN_S", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_S", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MIN_NI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_NI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MIN_NI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_NI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MIN_CR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_CR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MIN_CR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_CR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MIN_MO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_MO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MIN_MO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_MO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MIN_CU", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_CU", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MIN_CU", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_CU", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MAX_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MAX_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MAX_SI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_SI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MAX_SI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_SI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MAX_MN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_MN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MAX_MN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_MN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MAX_P", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_P", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MAX_P", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MAX_S", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_S", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MAX_S", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_S", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MAX_NI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_NI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MAX_NI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_NI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MAX_CR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_CR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MAX_CR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_CR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MAX_MO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_MO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MAX_MO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_MO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MAX_CU", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_CU", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MAX_CU", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_CU", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Test_MIN_UTS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MIN_UTS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Test_MIN_UTS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MIN_UTS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Test_MIN_YS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MIN_YS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Test_MIN_YS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MIN_YS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Test_MIN_Elongation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MIN_Elongation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Test_MIN_Elongation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MIN_Elongation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Test_MAX_UTS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MAX_UTS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Test_MAX_UTS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MAX_UTS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Test_MAX_YS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MAX_YS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Test_MAX_YS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MAX_YS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Test_MAX_Elongation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MAX_Elongation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Test_MAX_Elongation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MAX_Elongation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Test_Temp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_Temp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Test_Temp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_Temp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Test_ImpectValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_ImpectValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Test_ImpectValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_ImpectValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Test_Condition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_Condition", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Test_Condition", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_Condition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Size_StandardValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size_StandardValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Size_StandardValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size_StandardValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Size_ActualValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size_ActualValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Size_ActualValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size_ActualValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Coating_StandardValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coating_StandardValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Coating_StandardValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coating_StandardValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Coating_ActualValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coating_ActualValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Coating_ActualValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coating_ActualValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UTSWire_StandardValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UTSWire_StandardValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UTSWire_StandardValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UTSWire_StandardValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UTSWire_ActualValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UTSWire_ActualValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UTSWire_ActualValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UTSWire_ActualValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CastDia_StandardValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CastDia_StandardValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CastDia_StandardValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CastDia_StandardValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CastDia_ActualValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CastDia_ActualValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CastDia_ActualValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CastDia_ActualValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Helix_StandardValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Helix_StandardValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Helix_StandardValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Helix_StandardValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Helix_ActualValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Helix_ActualValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Helix_ActualValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Helix_ActualValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherTest_Radio_Specs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherTest_Radio_Specs", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherTest_Radio_Specs", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherTest_Radio_Specs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherTest_FaceBend_Specs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherTest_FaceBend_Specs", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherTest_FaceBend_Specs", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherTest_FaceBend_Specs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherTest_Filled_Specs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherTest_Filled_Specs", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherTest_Filled_Specs", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherTest_Filled_Specs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Remarks", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remarks", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Remarks", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remarks", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsApproved", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsApproved", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsApproved", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsApproved", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HideSection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HideSection", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HideSection", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HideSection", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CombineBatchNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CombineBatchNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CombineBatchNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CombineBatchNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Certificate_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Certificate_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Certificate_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Certificate_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Created_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Created_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Created_By", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_By", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Created_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_By", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Modified_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Modified_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Modified_By", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_By", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Modified_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_By", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Approved_By", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Approved_By", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Approved_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Approved_By", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Approved_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Approved_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Approved_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Approved_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsShowCELogo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowCELogo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsShowCELogo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowCELogo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tally_ItemName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tally_ItemName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tally_ItemName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tally_ItemName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GradeType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GradeType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GradeType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GradeType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsShowMig", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowMig", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsShowMig", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowMig", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsShowFlux", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowFlux", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsShowFlux", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowFlux", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsShowNone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowNone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsShowNone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowNone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TestCertificateRecord] ([CertificateNo], [CustomerName], [Issu" +
                "eDate], [Quanity], [InvoiceNo], [TradeDesignation], [Size], [BatchDate], [BatchN" +
                "o], [ManufecturingDate], [Specification], [WeldingProcess], [ShieldingGas], [Pre" +
                "HeatInerpassTemp], [Type], [APMS], [FlowRate], [CurrentPolarity], [Volts], [Trav" +
                "elSpeed], [BaseMetal], [Element_MIN_C], [Element_MIN_SI], [Element_MIN_MN], [Ele" +
                "ment_MIN_P], [Element_MIN_S], [Element_MIN_NI], [Element_MIN_CR], [Element_MIN_M" +
                "O], [Element_MIN_CU], [Element_MAX_C], [Element_MAX_SI], [Element_MAX_MN], [Elem" +
                "ent_MAX_P], [Element_MAX_S], [Element_MAX_NI], [Element_MAX_CR], [Element_MAX_MO" +
                "], [Element_MAX_CU], [Test_MIN_UTS], [Test_MIN_YS], [Test_MIN_Elongation], [Test" +
                "_MAX_UTS], [Test_MAX_YS], [Test_MAX_Elongation], [Test_Temp], [Test_ImpectValue]" +
                ", [Test_Condition], [Size_StandardValue], [Size_ActualValue], [Coating_StandardV" +
                "alue], [Coating_ActualValue], [UTSWire_StandardValue], [UTSWire_ActualValue], [C" +
                "astDia_StandardValue], [CastDia_ActualValue], [Helix_StandardValue], [Helix_Actu" +
                "alValue], [OtherTest_Radio_Specs], [OtherTest_FaceBend_Specs], [OtherTest_Filled" +
                "_Specs], [Remarks], [IsApproved], [HideSection], [CombineBatchNo], [Certificate_" +
                "Type], [Created_Date], [Created_By], [Modified_Date], [Modified_By], [Approved_B" +
                "y], [Approved_Date], [IsShowCELogo], [Tally_ItemName], [GradeType], [IsShowMig]," +
                " [IsShowFlux], [IsShowNone]) VALUES (@CertificateNo, @CustomerName, @IssueDate, " +
                "@Quanity, @InvoiceNo, @TradeDesignation, @Size, @BatchDate, @BatchNo, @Manufectu" +
                "ringDate, @Specification, @WeldingProcess, @ShieldingGas, @PreHeatInerpassTemp, " +
                "@Type, @APMS, @FlowRate, @CurrentPolarity, @Volts, @TravelSpeed, @BaseMetal, @El" +
                "ement_MIN_C, @Element_MIN_SI, @Element_MIN_MN, @Element_MIN_P, @Element_MIN_S, @" +
                "Element_MIN_NI, @Element_MIN_CR, @Element_MIN_MO, @Element_MIN_CU, @Element_MAX_" +
                "C, @Element_MAX_SI, @Element_MAX_MN, @Element_MAX_P, @Element_MAX_S, @Element_MA" +
                "X_NI, @Element_MAX_CR, @Element_MAX_MO, @Element_MAX_CU, @Test_MIN_UTS, @Test_MI" +
                "N_YS, @Test_MIN_Elongation, @Test_MAX_UTS, @Test_MAX_YS, @Test_MAX_Elongation, @" +
                "Test_Temp, @Test_ImpectValue, @Test_Condition, @Size_StandardValue, @Size_Actual" +
                "Value, @Coating_StandardValue, @Coating_ActualValue, @UTSWire_StandardValue, @UT" +
                "SWire_ActualValue, @CastDia_StandardValue, @CastDia_ActualValue, @Helix_Standard" +
                "Value, @Helix_ActualValue, @OtherTest_Radio_Specs, @OtherTest_FaceBend_Specs, @O" +
                "therTest_Filled_Specs, @Remarks, @IsApproved, @HideSection, @CombineBatchNo, @Ce" +
                "rtificate_Type, @Created_Date, @Created_By, @Modified_Date, @Modified_By, @Appro" +
                "ved_By, @Approved_Date, @IsShowCELogo, @Tally_ItemName, @GradeType, @IsShowMig, " +
                "@IsShowFlux, @IsShowNone);\r\nSELECT Id, CertificateNo, CustomerName, IssueDate, Q" +
                "uanity, InvoiceNo, TradeDesignation, Size, BatchDate, BatchNo, ManufecturingDate" +
                ", Specification, WeldingProcess, ShieldingGas, PreHeatInerpassTemp, Type, APMS, " +
                "FlowRate, CurrentPolarity, Volts, TravelSpeed, BaseMetal, Element_MIN_C, Element" +
                "_MIN_SI, Element_MIN_MN, Element_MIN_P, Element_MIN_S, Element_MIN_NI, Element_M" +
                "IN_CR, Element_MIN_MO, Element_MIN_CU, Element_MAX_C, Element_MAX_SI, Element_MA" +
                "X_MN, Element_MAX_P, Element_MAX_S, Element_MAX_NI, Element_MAX_CR, Element_MAX_" +
                "MO, Element_MAX_CU, Test_MIN_UTS, Test_MIN_YS, Test_MIN_Elongation, Test_MAX_UTS" +
                ", Test_MAX_YS, Test_MAX_Elongation, Test_Temp, Test_ImpectValue, Test_Condition," +
                " Size_StandardValue, Size_ActualValue, Coating_StandardValue, Coating_ActualValu" +
                "e, UTSWire_StandardValue, UTSWire_ActualValue, CastDia_StandardValue, CastDia_Ac" +
                "tualValue, Helix_StandardValue, Helix_ActualValue, OtherTest_Radio_Specs, OtherT" +
                "est_FaceBend_Specs, OtherTest_Filled_Specs, Remarks, IsApproved, HideSection, Co" +
                "mbineBatchNo, Certificate_Type, Created_Date, Created_By, Modified_Date, Modifie" +
                "d_By, Approved_By, Approved_Date, IsShowCELogo, Tally_ItemName, GradeType, IsSho" +
                "wMig, IsShowFlux, IsShowNone FROM TestCertificateRecord WHERE (Id = SCOPE_IDENTI" +
                "TY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertificateNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IssueDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IssueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quanity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quanity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TradeDesignation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TradeDesignation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Size", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchDate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ManufecturingDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufecturingDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specification", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specification", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeldingProcess", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeldingProcess", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShieldingGas", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShieldingGas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PreHeatInerpassTemp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PreHeatInerpassTemp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APMS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APMS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FlowRate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FlowRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentPolarity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrentPolarity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Volts", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Volts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TravelSpeed", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TravelSpeed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BaseMetal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseMetal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MIN_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MIN_SI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_SI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MIN_MN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_MN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MIN_P", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MIN_S", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_S", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MIN_NI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_NI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MIN_CR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_CR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MIN_MO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_MO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MIN_CU", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_CU", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MAX_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MAX_SI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_SI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MAX_MN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_MN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MAX_P", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MAX_S", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_S", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MAX_NI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_NI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MAX_CR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_CR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MAX_MO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_MO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MAX_CU", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_CU", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Test_MIN_UTS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MIN_UTS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Test_MIN_YS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MIN_YS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Test_MIN_Elongation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MIN_Elongation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Test_MAX_UTS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MAX_UTS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Test_MAX_YS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MAX_YS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Test_MAX_Elongation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MAX_Elongation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Test_Temp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_Temp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Test_ImpectValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_ImpectValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Test_Condition", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_Condition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Size_StandardValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size_StandardValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Size_ActualValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size_ActualValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Coating_StandardValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coating_StandardValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Coating_ActualValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coating_ActualValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UTSWire_StandardValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UTSWire_StandardValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UTSWire_ActualValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UTSWire_ActualValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CastDia_StandardValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CastDia_StandardValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CastDia_ActualValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CastDia_ActualValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Helix_StandardValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Helix_StandardValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Helix_ActualValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Helix_ActualValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherTest_Radio_Specs", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherTest_Radio_Specs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherTest_FaceBend_Specs", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherTest_FaceBend_Specs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherTest_Filled_Specs", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherTest_Filled_Specs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remarks", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remarks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsApproved", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsApproved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HideSection", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HideSection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CombineBatchNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CombineBatchNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Certificate_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Certificate_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_By", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modified_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modified_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_By", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Approved_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Approved_By", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Approved_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Approved_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsShowCELogo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowCELogo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tally_ItemName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tally_ItemName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GradeType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GradeType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsShowMig", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowMig", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsShowFlux", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowFlux", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsShowNone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowNone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TestCertificateRecord] SET [CertificateNo] = @CertificateNo, [Custo" +
                "merName] = @CustomerName, [IssueDate] = @IssueDate, [Quanity] = @Quanity, [Invoi" +
                "ceNo] = @InvoiceNo, [TradeDesignation] = @TradeDesignation, [Size] = @Size, [Bat" +
                "chDate] = @BatchDate, [BatchNo] = @BatchNo, [ManufecturingDate] = @Manufecturing" +
                "Date, [Specification] = @Specification, [WeldingProcess] = @WeldingProcess, [Shi" +
                "eldingGas] = @ShieldingGas, [PreHeatInerpassTemp] = @PreHeatInerpassTemp, [Type]" +
                " = @Type, [APMS] = @APMS, [FlowRate] = @FlowRate, [CurrentPolarity] = @CurrentPo" +
                "larity, [Volts] = @Volts, [TravelSpeed] = @TravelSpeed, [BaseMetal] = @BaseMetal" +
                ", [Element_MIN_C] = @Element_MIN_C, [Element_MIN_SI] = @Element_MIN_SI, [Element" +
                "_MIN_MN] = @Element_MIN_MN, [Element_MIN_P] = @Element_MIN_P, [Element_MIN_S] = " +
                "@Element_MIN_S, [Element_MIN_NI] = @Element_MIN_NI, [Element_MIN_CR] = @Element_" +
                "MIN_CR, [Element_MIN_MO] = @Element_MIN_MO, [Element_MIN_CU] = @Element_MIN_CU, " +
                "[Element_MAX_C] = @Element_MAX_C, [Element_MAX_SI] = @Element_MAX_SI, [Element_M" +
                "AX_MN] = @Element_MAX_MN, [Element_MAX_P] = @Element_MAX_P, [Element_MAX_S] = @E" +
                "lement_MAX_S, [Element_MAX_NI] = @Element_MAX_NI, [Element_MAX_CR] = @Element_MA" +
                "X_CR, [Element_MAX_MO] = @Element_MAX_MO, [Element_MAX_CU] = @Element_MAX_CU, [T" +
                "est_MIN_UTS] = @Test_MIN_UTS, [Test_MIN_YS] = @Test_MIN_YS, [Test_MIN_Elongation" +
                "] = @Test_MIN_Elongation, [Test_MAX_UTS] = @Test_MAX_UTS, [Test_MAX_YS] = @Test_" +
                "MAX_YS, [Test_MAX_Elongation] = @Test_MAX_Elongation, [Test_Temp] = @Test_Temp, " +
                "[Test_ImpectValue] = @Test_ImpectValue, [Test_Condition] = @Test_Condition, [Siz" +
                "e_StandardValue] = @Size_StandardValue, [Size_ActualValue] = @Size_ActualValue, " +
                "[Coating_StandardValue] = @Coating_StandardValue, [Coating_ActualValue] = @Coati" +
                "ng_ActualValue, [UTSWire_StandardValue] = @UTSWire_StandardValue, [UTSWire_Actua" +
                "lValue] = @UTSWire_ActualValue, [CastDia_StandardValue] = @CastDia_StandardValue" +
                ", [CastDia_ActualValue] = @CastDia_ActualValue, [Helix_StandardValue] = @Helix_S" +
                "tandardValue, [Helix_ActualValue] = @Helix_ActualValue, [OtherTest_Radio_Specs] " +
                "= @OtherTest_Radio_Specs, [OtherTest_FaceBend_Specs] = @OtherTest_FaceBend_Specs" +
                ", [OtherTest_Filled_Specs] = @OtherTest_Filled_Specs, [Remarks] = @Remarks, [IsA" +
                "pproved] = @IsApproved, [HideSection] = @HideSection, [CombineBatchNo] = @Combin" +
                "eBatchNo, [Certificate_Type] = @Certificate_Type, [Created_Date] = @Created_Date" +
                ", [Created_By] = @Created_By, [Modified_Date] = @Modified_Date, [Modified_By] = " +
                "@Modified_By, [Approved_By] = @Approved_By, [Approved_Date] = @Approved_Date, [I" +
                "sShowCELogo] = @IsShowCELogo, [Tally_ItemName] = @Tally_ItemName, [GradeType] = " +
                "@GradeType, [IsShowMig] = @IsShowMig, [IsShowFlux] = @IsShowFlux, [IsShowNone] =" +
                " @IsShowNone WHERE (([Id] = @Original_Id) AND ((@IsNull_CertificateNo = 1 AND [C" +
                "ertificateNo] IS NULL) OR ([CertificateNo] = @Original_CertificateNo)) AND ((@Is" +
                "Null_CustomerName = 1 AND [CustomerName] IS NULL) OR ([CustomerName] = @Original" +
                "_CustomerName)) AND ((@IsNull_IssueDate = 1 AND [IssueDate] IS NULL) OR ([IssueD" +
                "ate] = @Original_IssueDate)) AND ((@IsNull_Quanity = 1 AND [Quanity] IS NULL) OR" +
                " ([Quanity] = @Original_Quanity)) AND ((@IsNull_InvoiceNo = 1 AND [InvoiceNo] IS" +
                " NULL) OR ([InvoiceNo] = @Original_InvoiceNo)) AND ((@IsNull_TradeDesignation = " +
                "1 AND [TradeDesignation] IS NULL) OR ([TradeDesignation] = @Original_TradeDesign" +
                "ation)) AND ((@IsNull_Size = 1 AND [Size] IS NULL) OR ([Size] = @Original_Size))" +
                " AND ((@IsNull_BatchDate = 1 AND [BatchDate] IS NULL) OR ([BatchDate] = @Origina" +
                "l_BatchDate)) AND ((@IsNull_BatchNo = 1 AND [BatchNo] IS NULL) OR ([BatchNo] = @" +
                "Original_BatchNo)) AND ((@IsNull_ManufecturingDate = 1 AND [ManufecturingDate] I" +
                "S NULL) OR ([ManufecturingDate] = @Original_ManufecturingDate)) AND ((@IsNull_Sp" +
                "ecification = 1 AND [Specification] IS NULL) OR ([Specification] = @Original_Spe" +
                "cification)) AND ((@IsNull_WeldingProcess = 1 AND [WeldingProcess] IS NULL) OR (" +
                "[WeldingProcess] = @Original_WeldingProcess)) AND ((@IsNull_ShieldingGas = 1 AND" +
                " [ShieldingGas] IS NULL) OR ([ShieldingGas] = @Original_ShieldingGas)) AND ((@Is" +
                "Null_PreHeatInerpassTemp = 1 AND [PreHeatInerpassTemp] IS NULL) OR ([PreHeatIner" +
                "passTemp] = @Original_PreHeatInerpassTemp)) AND ((@IsNull_Type = 1 AND [Type] IS" +
                " NULL) OR ([Type] = @Original_Type)) AND ((@IsNull_APMS = 1 AND [APMS] IS NULL) " +
                "OR ([APMS] = @Original_APMS)) AND ((@IsNull_FlowRate = 1 AND [FlowRate] IS NULL)" +
                " OR ([FlowRate] = @Original_FlowRate)) AND ((@IsNull_CurrentPolarity = 1 AND [Cu" +
                "rrentPolarity] IS NULL) OR ([CurrentPolarity] = @Original_CurrentPolarity)) AND " +
                "((@IsNull_Volts = 1 AND [Volts] IS NULL) OR ([Volts] = @Original_Volts)) AND ((@" +
                "IsNull_TravelSpeed = 1 AND [TravelSpeed] IS NULL) OR ([TravelSpeed] = @Original_" +
                "TravelSpeed)) AND ((@IsNull_BaseMetal = 1 AND [BaseMetal] IS NULL) OR ([BaseMeta" +
                "l] = @Original_BaseMetal)) AND ((@IsNull_Element_MIN_C = 1 AND [Element_MIN_C] I" +
                "S NULL) OR ([Element_MIN_C] = @Original_Element_MIN_C)) AND ((@IsNull_Element_MI" +
                "N_SI = 1 AND [Element_MIN_SI] IS NULL) OR ([Element_MIN_SI] = @Original_Element_" +
                "MIN_SI)) AND ((@IsNull_Element_MIN_MN = 1 AND [Element_MIN_MN] IS NULL) OR ([Ele" +
                "ment_MIN_MN] = @Original_Element_MIN_MN)) AND ((@IsNull_Element_MIN_P = 1 AND [E" +
                "lement_MIN_P] IS NULL) OR ([Element_MIN_P] = @Original_Element_MIN_P)) AND ((@Is" +
                "Null_Element_MIN_S = 1 AND [Element_MIN_S] IS NULL) OR ([Element_MIN_S] = @Origi" +
                "nal_Element_MIN_S)) AND ((@IsNull_Element_MIN_NI = 1 AND [Element_MIN_NI] IS NUL" +
                "L) OR ([Element_MIN_NI] = @Original_Element_MIN_NI)) AND ((@IsNull_Element_MIN_C" +
                "R = 1 AND [Element_MIN_CR] IS NULL) OR ([Element_MIN_CR] = @Original_Element_MIN" +
                "_CR)) AND ((@IsNull_Element_MIN_MO = 1 AND [Element_MIN_MO] IS NULL) OR ([Elemen" +
                "t_MIN_MO] = @Original_Element_MIN_MO)) AND ((@IsNull_Element_MIN_CU = 1 AND [Ele" +
                "ment_MIN_CU] IS NULL) OR ([Element_MIN_CU] = @Original_Element_MIN_CU)) AND ((@I" +
                "sNull_Element_MAX_C = 1 AND [Element_MAX_C] IS NULL) OR ([Element_MAX_C] = @Orig" +
                "inal_Element_MAX_C)) AND ((@IsNull_Element_MAX_SI = 1 AND [Element_MAX_SI] IS NU" +
                "LL) OR ([Element_MAX_SI] = @Original_Element_MAX_SI)) AND ((@IsNull_Element_MAX_" +
                "MN = 1 AND [Element_MAX_MN] IS NULL) OR ([Element_MAX_MN] = @Original_Element_MA" +
                "X_MN)) AND ((@IsNull_Element_MAX_P = 1 AND [Element_MAX_P] IS NULL) OR ([Element" +
                "_MAX_P] = @Original_Element_MAX_P)) AND ((@IsNull_Element_MAX_S = 1 AND [Element" +
                "_MAX_S] IS NULL) OR ([Element_MAX_S] = @Original_Element_MAX_S)) AND ((@IsNull_E" +
                "lement_MAX_NI = 1 AND [Element_MAX_NI] IS NULL) OR ([Element_MAX_NI] = @Original" +
                "_Element_MAX_NI)) AND ((@IsNull_Element_MAX_CR = 1 AND [Element_MAX_CR] IS NULL)" +
                " OR ([Element_MAX_CR] = @Original_Element_MAX_CR)) AND ((@IsNull_Element_MAX_MO " +
                "= 1 AND [Element_MAX_MO] IS NULL) OR ([Element_MAX_MO] = @Original_Element_MAX_M" +
                "O)) AND ((@IsNull_Element_MAX_CU = 1 AND [Element_MAX_CU] IS NULL) OR ([Element_" +
                "MAX_CU] = @Original_Element_MAX_CU)) AND ((@IsNull_Test_MIN_UTS = 1 AND [Test_MI" +
                "N_UTS] IS NULL) OR ([Test_MIN_UTS] = @Original_Test_MIN_UTS)) AND ((@IsNull_Test" +
                "_MIN_YS = 1 AND [Test_MIN_YS] IS NULL) OR ([Test_MIN_YS] = @Original_Test_MIN_YS" +
                ")) AND ((@IsNull_Test_MIN_Elongation = 1 AND [Test_MIN_Elongation] IS NULL) OR (" +
                "[Test_MIN_Elongation] = @Original_Test_MIN_Elongation)) AND ((@IsNull_Test_MAX_U" +
                "TS = 1 AND [Test_MAX_UTS] IS NULL) OR ([Test_MAX_UTS] = @Original_Test_MAX_UTS))" +
                " AND ((@IsNull_Test_MAX_YS = 1 AND [Test_MAX_YS] IS NULL) OR ([Test_MAX_YS] = @O" +
                "riginal_Test_MAX_YS)) AND ((@IsNull_Test_MAX_Elongation = 1 AND [Test_MAX_Elonga" +
                "tion] IS NULL) OR ([Test_MAX_Elongation] = @Original_Test_MAX_Elongation)) AND (" +
                "(@IsNull_Test_Temp = 1 AND [Test_Temp] IS NULL) OR ([Test_Temp] = @Original_Test" +
                "_Temp)) AND ((@IsNull_Test_ImpectValue = 1 AND [Test_ImpectValue] IS NULL) OR ([" +
                "Test_ImpectValue] = @Original_Test_ImpectValue)) AND ((@IsNull_Test_Condition = " +
                "1 AND [Test_Condition] IS NULL) OR ([Test_Condition] = @Original_Test_Condition)" +
                ") AND ((@IsNull_Size_StandardValue = 1 AND [Size_StandardValue] IS NULL) OR ([Si" +
                "ze_StandardValue] = @Original_Size_StandardValue)) AND ((@IsNull_Size_ActualValu" +
                "e = 1 AND [Size_ActualValue] IS NULL) OR ([Size_ActualValue] = @Original_Size_Ac" +
                "tualValue)) AND ((@IsNull_Coating_StandardValue = 1 AND [Coating_StandardValue] " +
                "IS NULL) OR ([Coating_StandardValue] = @Original_Coating_StandardValue)) AND ((@" +
                "IsNull_Coating_ActualValue = 1 AND [Coating_ActualValue] IS NULL) OR ([Coating_A" +
                "ctualValue] = @Original_Coating_ActualValue)) AND ((@IsNull_UTSWire_StandardValu" +
                "e = 1 AND [UTSWire_StandardValue] IS NULL) OR ([UTSWire_StandardValue] = @Origin" +
                "al_UTSWire_StandardValue)) AND ((@IsNull_UTSWire_ActualValue = 1 AND [UTSWire_Ac" +
                "tualValue] IS NULL) OR ([UTSWire_ActualValue] = @Original_UTSWire_ActualValue)) " +
                "AND ((@IsNull_CastDia_StandardValue = 1 AND [CastDia_StandardValue] IS NULL) OR " +
                "([CastDia_StandardValue] = @Original_CastDia_StandardValue)) AND ((@IsNull_CastD" +
                "ia_ActualValue = 1 AND [CastDia_ActualValue] IS NULL) OR ([CastDia_ActualValue] " +
                "= @Original_CastDia_ActualValue)) AND ((@IsNull_Helix_StandardValue = 1 AND [Hel" +
                "ix_StandardValue] IS NULL) OR ([Helix_StandardValue] = @Original_Helix_StandardV" +
                "alue)) AND ((@IsNull_Helix_ActualValue = 1 AND [Helix_ActualValue] IS NULL) OR (" +
                "[Helix_ActualValue] = @Original_Helix_ActualValue)) AND ((@IsNull_OtherTest_Radi" +
                "o_Specs = 1 AND [OtherTest_Radio_Specs] IS NULL) OR ([OtherTest_Radio_Specs] = @" +
                "Original_OtherTest_Radio_Specs)) AND ((@IsNull_OtherTest_FaceBend_Specs = 1 AND " +
                "[OtherTest_FaceBend_Specs] IS NULL) OR ([OtherTest_FaceBend_Specs] = @Original_O" +
                "therTest_FaceBend_Specs)) AND ((@IsNull_OtherTest_Filled_Specs = 1 AND [OtherTes" +
                "t_Filled_Specs] IS NULL) OR ([OtherTest_Filled_Specs] = @Original_OtherTest_Fill" +
                "ed_Specs)) AND ((@IsNull_Remarks = 1 AND [Remarks] IS NULL) OR ([Remarks] = @Ori" +
                "ginal_Remarks)) AND ((@IsNull_IsApproved = 1 AND [IsApproved] IS NULL) OR ([IsAp" +
                "proved] = @Original_IsApproved)) AND ((@IsNull_HideSection = 1 AND [HideSection]" +
                " IS NULL) OR ([HideSection] = @Original_HideSection)) AND ((@IsNull_CombineBatch" +
                "No = 1 AND [CombineBatchNo] IS NULL) OR ([CombineBatchNo] = @Original_CombineBat" +
                "chNo)) AND ((@IsNull_Certificate_Type = 1 AND [Certificate_Type] IS NULL) OR ([C" +
                "ertificate_Type] = @Original_Certificate_Type)) AND ((@IsNull_Created_Date = 1 A" +
                "ND [Created_Date] IS NULL) OR ([Created_Date] = @Original_Created_Date)) AND ((@" +
                "IsNull_Created_By = 1 AND [Created_By] IS NULL) OR ([Created_By] = @Original_Cre" +
                "ated_By)) AND ((@IsNull_Modified_Date = 1 AND [Modified_Date] IS NULL) OR ([Modi" +
                "fied_Date] = @Original_Modified_Date)) AND ((@IsNull_Modified_By = 1 AND [Modifi" +
                "ed_By] IS NULL) OR ([Modified_By] = @Original_Modified_By)) AND ((@IsNull_Approv" +
                "ed_By = 1 AND [Approved_By] IS NULL) OR ([Approved_By] = @Original_Approved_By))" +
                " AND ((@IsNull_Approved_Date = 1 AND [Approved_Date] IS NULL) OR ([Approved_Date" +
                "] = @Original_Approved_Date)) AND ((@IsNull_IsShowCELogo = 1 AND [IsShowCELogo] " +
                "IS NULL) OR ([IsShowCELogo] = @Original_IsShowCELogo)) AND ((@IsNull_Tally_ItemN" +
                "ame = 1 AND [Tally_ItemName] IS NULL) OR ([Tally_ItemName] = @Original_Tally_Ite" +
                "mName)) AND ((@IsNull_GradeType = 1 AND [GradeType] IS NULL) OR ([GradeType] = @" +
                "Original_GradeType)) AND ((@IsNull_IsShowMig = 1 AND [IsShowMig] IS NULL) OR ([I" +
                "sShowMig] = @Original_IsShowMig)) AND ((@IsNull_IsShowFlux = 1 AND [IsShowFlux] " +
                "IS NULL) OR ([IsShowFlux] = @Original_IsShowFlux)) AND ((@IsNull_IsShowNone = 1 " +
                "AND [IsShowNone] IS NULL) OR ([IsShowNone] = @Original_IsShowNone)));\r\nSELECT Id" +
                ", CertificateNo, CustomerName, IssueDate, Quanity, InvoiceNo, TradeDesignation, " +
                "Size, BatchDate, BatchNo, ManufecturingDate, Specification, WeldingProcess, Shie" +
                "ldingGas, PreHeatInerpassTemp, Type, APMS, FlowRate, CurrentPolarity, Volts, Tra" +
                "velSpeed, BaseMetal, Element_MIN_C, Element_MIN_SI, Element_MIN_MN, Element_MIN_" +
                "P, Element_MIN_S, Element_MIN_NI, Element_MIN_CR, Element_MIN_MO, Element_MIN_CU" +
                ", Element_MAX_C, Element_MAX_SI, Element_MAX_MN, Element_MAX_P, Element_MAX_S, E" +
                "lement_MAX_NI, Element_MAX_CR, Element_MAX_MO, Element_MAX_CU, Test_MIN_UTS, Tes" +
                "t_MIN_YS, Test_MIN_Elongation, Test_MAX_UTS, Test_MAX_YS, Test_MAX_Elongation, T" +
                "est_Temp, Test_ImpectValue, Test_Condition, Size_StandardValue, Size_ActualValue" +
                ", Coating_StandardValue, Coating_ActualValue, UTSWire_StandardValue, UTSWire_Act" +
                "ualValue, CastDia_StandardValue, CastDia_ActualValue, Helix_StandardValue, Helix" +
                "_ActualValue, OtherTest_Radio_Specs, OtherTest_FaceBend_Specs, OtherTest_Filled_" +
                "Specs, Remarks, IsApproved, HideSection, CombineBatchNo, Certificate_Type, Creat" +
                "ed_Date, Created_By, Modified_Date, Modified_By, Approved_By, Approved_Date, IsS" +
                "howCELogo, Tally_ItemName, GradeType, IsShowMig, IsShowFlux, IsShowNone FROM Tes" +
                "tCertificateRecord WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CertificateNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IssueDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IssueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quanity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quanity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TradeDesignation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TradeDesignation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Size", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchDate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ManufecturingDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufecturingDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Specification", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specification", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeldingProcess", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeldingProcess", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShieldingGas", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShieldingGas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PreHeatInerpassTemp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PreHeatInerpassTemp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APMS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APMS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FlowRate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FlowRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentPolarity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrentPolarity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Volts", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Volts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TravelSpeed", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TravelSpeed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BaseMetal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseMetal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MIN_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MIN_SI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_SI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MIN_MN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_MN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MIN_P", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MIN_S", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_S", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MIN_NI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_NI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MIN_CR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_CR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MIN_MO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_MO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MIN_CU", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_CU", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MAX_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MAX_SI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_SI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MAX_MN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_MN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MAX_P", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MAX_S", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_S", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MAX_NI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_NI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MAX_CR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_CR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MAX_MO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_MO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Element_MAX_CU", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_CU", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Test_MIN_UTS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MIN_UTS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Test_MIN_YS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MIN_YS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Test_MIN_Elongation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MIN_Elongation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Test_MAX_UTS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MAX_UTS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Test_MAX_YS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MAX_YS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Test_MAX_Elongation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MAX_Elongation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Test_Temp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_Temp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Test_ImpectValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_ImpectValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Test_Condition", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_Condition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Size_StandardValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size_StandardValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Size_ActualValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size_ActualValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Coating_StandardValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coating_StandardValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Coating_ActualValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coating_ActualValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UTSWire_StandardValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UTSWire_StandardValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UTSWire_ActualValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UTSWire_ActualValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CastDia_StandardValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CastDia_StandardValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CastDia_ActualValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CastDia_ActualValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Helix_StandardValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Helix_StandardValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Helix_ActualValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Helix_ActualValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherTest_Radio_Specs", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherTest_Radio_Specs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherTest_FaceBend_Specs", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherTest_FaceBend_Specs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherTest_Filled_Specs", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherTest_Filled_Specs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remarks", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remarks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsApproved", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsApproved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HideSection", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HideSection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CombineBatchNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CombineBatchNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Certificate_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Certificate_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_By", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modified_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modified_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_By", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Approved_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Approved_By", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Approved_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Approved_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsShowCELogo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowCELogo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tally_ItemName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tally_ItemName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GradeType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GradeType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsShowMig", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowMig", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsShowFlux", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowFlux", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsShowNone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowNone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CertificateNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CertificateNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CertificateNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CustomerName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IssueDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IssueDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IssueDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IssueDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Quanity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quanity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quanity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quanity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TradeDesignation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TradeDesignation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TradeDesignation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TradeDesignation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Size", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BatchDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BatchDate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BatchNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BatchNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ManufecturingDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufecturingDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ManufecturingDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufecturingDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Specification", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specification", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Specification", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Specification", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WeldingProcess", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeldingProcess", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WeldingProcess", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeldingProcess", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShieldingGas", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShieldingGas", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShieldingGas", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShieldingGas", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PreHeatInerpassTemp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PreHeatInerpassTemp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PreHeatInerpassTemp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PreHeatInerpassTemp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_APMS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APMS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APMS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APMS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FlowRate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FlowRate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FlowRate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FlowRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CurrentPolarity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrentPolarity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CurrentPolarity", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrentPolarity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Volts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Volts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Volts", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Volts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TravelSpeed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TravelSpeed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TravelSpeed", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TravelSpeed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BaseMetal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseMetal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BaseMetal", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseMetal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MIN_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MIN_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MIN_SI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_SI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MIN_SI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_SI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MIN_MN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_MN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MIN_MN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_MN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MIN_P", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_P", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MIN_P", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MIN_S", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_S", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MIN_S", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_S", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MIN_NI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_NI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MIN_NI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_NI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MIN_CR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_CR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MIN_CR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_CR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MIN_MO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_MO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MIN_MO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_MO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MIN_CU", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_CU", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MIN_CU", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MIN_CU", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MAX_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MAX_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MAX_SI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_SI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MAX_SI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_SI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MAX_MN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_MN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MAX_MN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_MN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MAX_P", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_P", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MAX_P", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MAX_S", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_S", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MAX_S", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_S", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MAX_NI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_NI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MAX_NI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_NI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MAX_CR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_CR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MAX_CR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_CR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MAX_MO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_MO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MAX_MO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_MO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Element_MAX_CU", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_CU", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Element_MAX_CU", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Element_MAX_CU", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Test_MIN_UTS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MIN_UTS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Test_MIN_UTS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MIN_UTS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Test_MIN_YS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MIN_YS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Test_MIN_YS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MIN_YS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Test_MIN_Elongation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MIN_Elongation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Test_MIN_Elongation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MIN_Elongation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Test_MAX_UTS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MAX_UTS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Test_MAX_UTS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MAX_UTS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Test_MAX_YS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MAX_YS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Test_MAX_YS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MAX_YS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Test_MAX_Elongation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MAX_Elongation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Test_MAX_Elongation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_MAX_Elongation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Test_Temp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_Temp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Test_Temp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_Temp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Test_ImpectValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_ImpectValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Test_ImpectValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_ImpectValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Test_Condition", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_Condition", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Test_Condition", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Test_Condition", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Size_StandardValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size_StandardValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Size_StandardValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size_StandardValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Size_ActualValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size_ActualValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Size_ActualValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size_ActualValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Coating_StandardValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coating_StandardValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Coating_StandardValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coating_StandardValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Coating_ActualValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coating_ActualValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Coating_ActualValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Coating_ActualValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UTSWire_StandardValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UTSWire_StandardValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UTSWire_StandardValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UTSWire_StandardValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UTSWire_ActualValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UTSWire_ActualValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UTSWire_ActualValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UTSWire_ActualValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CastDia_StandardValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CastDia_StandardValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CastDia_StandardValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CastDia_StandardValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CastDia_ActualValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CastDia_ActualValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CastDia_ActualValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CastDia_ActualValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Helix_StandardValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Helix_StandardValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Helix_StandardValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Helix_StandardValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Helix_ActualValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Helix_ActualValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Helix_ActualValue", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Helix_ActualValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherTest_Radio_Specs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherTest_Radio_Specs", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherTest_Radio_Specs", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherTest_Radio_Specs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherTest_FaceBend_Specs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherTest_FaceBend_Specs", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherTest_FaceBend_Specs", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherTest_FaceBend_Specs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherTest_Filled_Specs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherTest_Filled_Specs", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherTest_Filled_Specs", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherTest_Filled_Specs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Remarks", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remarks", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Remarks", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remarks", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsApproved", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsApproved", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsApproved", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsApproved", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HideSection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HideSection", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HideSection", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HideSection", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CombineBatchNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CombineBatchNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CombineBatchNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CombineBatchNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Certificate_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Certificate_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Certificate_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Certificate_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Created_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Created_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Created_By", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_By", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Created_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created_By", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Modified_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Modified_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Modified_By", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_By", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Modified_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modified_By", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Approved_By", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Approved_By", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Approved_By", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Approved_By", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Approved_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Approved_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Approved_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Approved_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsShowCELogo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowCELogo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsShowCELogo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowCELogo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tally_ItemName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tally_ItemName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tally_ItemName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tally_ItemName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GradeType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GradeType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GradeType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GradeType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsShowMig", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowMig", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsShowMig", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowMig", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsShowFlux", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowFlux", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsShowFlux", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowFlux", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsShowNone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowNone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsShowNone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsShowNone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::RDLCDesign.Properties.Settings.Default.ShakuntEnterprisesConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Id, CertificateNo, CustomerName, IssueDate, Quanity, InvoiceNo, TradeDesignation, Size, BatchDate, BatchNo, ManufecturingDate, Specification, WeldingProcess, ShieldingGas, PreHeatInerpassTemp, Type, APMS, FlowRate, CurrentPolarity, Volts, TravelSpeed, BaseMetal, Element_MIN_C, Element_MIN_SI, Element_MIN_MN, Element_MIN_P, Element_MIN_S, Element_MIN_NI, Element_MIN_CR, Element_MIN_MO, Element_MIN_CU, Element_MAX_C, Element_MAX_SI, Element_MAX_MN, Element_MAX_P, Element_MAX_S, Element_MAX_NI, Element_MAX_CR, Element_MAX_MO, Element_MAX_CU, Test_MIN_UTS, Test_MIN_YS, Test_MIN_Elongation, Test_MAX_UTS, Test_MAX_YS, Test_MAX_Elongation, Test_Temp, Test_ImpectValue, Test_Condition, Size_StandardValue, Size_ActualValue, Coating_StandardValue, Coating_ActualValue, UTSWire_StandardValue, UTSWire_ActualValue, CastDia_StandardValue, CastDia_ActualValue, Helix_StandardValue, Helix_ActualValue, OtherTest_Radio_Specs, OtherTest_FaceBend_Specs, OtherTest_Filled_Specs, Remarks, IsApproved, HideSection, CombineBatchNo, Certificate_Type, Created_Date, Created_By, Modified_Date, Modified_By, Approved_By, Approved_Date, IsShowCELogo, Tally_ItemName, GradeType, IsShowMig, IsShowFlux, IsShowNone FROM dbo.TestCertificateRecord";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ShakuntEnterprisesDataSet.TestCertificateRecordDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ShakuntEnterprisesDataSet.TestCertificateRecordDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ShakuntEnterprisesDataSet.TestCertificateRecordDataTable dataTable = new ShakuntEnterprisesDataSet.TestCertificateRecordDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ShakuntEnterprisesDataSet.TestCertificateRecordDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ShakuntEnterprisesDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TestCertificateRecord");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Id, 
                    string Original_CertificateNo, 
                    string Original_CustomerName, 
                    global::System.Nullable<global::System.DateTime> Original_IssueDate, 
                    string Original_Quanity, 
                    string Original_InvoiceNo, 
                    string Original_TradeDesignation, 
                    string Original_Size, 
                    string Original_BatchDate, 
                    string Original_BatchNo, 
                    global::System.Nullable<global::System.DateTime> Original_ManufecturingDate, 
                    string Original_Specification, 
                    string Original_WeldingProcess, 
                    string Original_ShieldingGas, 
                    string Original_PreHeatInerpassTemp, 
                    string Original_Type, 
                    string Original_APMS, 
                    string Original_FlowRate, 
                    string Original_CurrentPolarity, 
                    string Original_Volts, 
                    string Original_TravelSpeed, 
                    string Original_BaseMetal, 
                    string Original_Element_MIN_C, 
                    string Original_Element_MIN_SI, 
                    string Original_Element_MIN_MN, 
                    string Original_Element_MIN_P, 
                    string Original_Element_MIN_S, 
                    string Original_Element_MIN_NI, 
                    string Original_Element_MIN_CR, 
                    string Original_Element_MIN_MO, 
                    string Original_Element_MIN_CU, 
                    string Original_Element_MAX_C, 
                    string Original_Element_MAX_SI, 
                    string Original_Element_MAX_MN, 
                    string Original_Element_MAX_P, 
                    string Original_Element_MAX_S, 
                    string Original_Element_MAX_NI, 
                    string Original_Element_MAX_CR, 
                    string Original_Element_MAX_MO, 
                    string Original_Element_MAX_CU, 
                    string Original_Test_MIN_UTS, 
                    string Original_Test_MIN_YS, 
                    string Original_Test_MIN_Elongation, 
                    string Original_Test_MAX_UTS, 
                    string Original_Test_MAX_YS, 
                    string Original_Test_MAX_Elongation, 
                    string Original_Test_Temp, 
                    string Original_Test_ImpectValue, 
                    string Original_Test_Condition, 
                    string Original_Size_StandardValue, 
                    string Original_Size_ActualValue, 
                    string Original_Coating_StandardValue, 
                    string Original_Coating_ActualValue, 
                    string Original_UTSWire_StandardValue, 
                    string Original_UTSWire_ActualValue, 
                    string Original_CastDia_StandardValue, 
                    string Original_CastDia_ActualValue, 
                    string Original_Helix_StandardValue, 
                    string Original_Helix_ActualValue, 
                    string Original_OtherTest_Radio_Specs, 
                    string Original_OtherTest_FaceBend_Specs, 
                    string Original_OtherTest_Filled_Specs, 
                    string Original_Remarks, 
                    global::System.Nullable<int> Original_IsApproved, 
                    string Original_HideSection, 
                    string Original_CombineBatchNo, 
                    string Original_Certificate_Type, 
                    global::System.Nullable<global::System.DateTime> Original_Created_Date, 
                    string Original_Created_By, 
                    global::System.Nullable<global::System.DateTime> Original_Modified_Date, 
                    string Original_Modified_By, 
                    string Original_Approved_By, 
                    global::System.Nullable<global::System.DateTime> Original_Approved_Date, 
                    string Original_IsShowCELogo, 
                    string Original_Tally_ItemName, 
                    string Original_GradeType, 
                    string Original_IsShowMig, 
                    string Original_IsShowFlux, 
                    string Original_IsShowNone) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_CertificateNo == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CertificateNo));
            }
            if ((Original_CustomerName == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_CustomerName));
            }
            if ((Original_IssueDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_IssueDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_Quanity == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Quanity));
            }
            if ((Original_InvoiceNo == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_InvoiceNo));
            }
            if ((Original_TradeDesignation == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_TradeDesignation));
            }
            if ((Original_Size == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Size));
            }
            if ((Original_BatchDate == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_BatchDate));
            }
            if ((Original_BatchNo == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_BatchNo));
            }
            if ((Original_ManufecturingDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((System.DateTime)(Original_ManufecturingDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_Specification == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_Specification));
            }
            if ((Original_WeldingProcess == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_WeldingProcess));
            }
            if ((Original_ShieldingGas == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_ShieldingGas));
            }
            if ((Original_PreHeatInerpassTemp == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_PreHeatInerpassTemp));
            }
            if ((Original_Type == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_Type));
            }
            if ((Original_APMS == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_APMS));
            }
            if ((Original_FlowRate == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_FlowRate));
            }
            if ((Original_CurrentPolarity == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_CurrentPolarity));
            }
            if ((Original_Volts == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_Volts));
            }
            if ((Original_TravelSpeed == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_TravelSpeed));
            }
            if ((Original_BaseMetal == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_BaseMetal));
            }
            if ((Original_Element_MIN_C == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_Element_MIN_C));
            }
            if ((Original_Element_MIN_SI == null)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_Element_MIN_SI));
            }
            if ((Original_Element_MIN_MN == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_Element_MIN_MN));
            }
            if ((Original_Element_MIN_P == null)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_Element_MIN_P));
            }
            if ((Original_Element_MIN_S == null)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_Element_MIN_S));
            }
            if ((Original_Element_MIN_NI == null)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((string)(Original_Element_MIN_NI));
            }
            if ((Original_Element_MIN_CR == null)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((string)(Original_Element_MIN_CR));
            }
            if ((Original_Element_MIN_MO == null)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((string)(Original_Element_MIN_MO));
            }
            if ((Original_Element_MIN_CU == null)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((string)(Original_Element_MIN_CU));
            }
            if ((Original_Element_MAX_C == null)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_Element_MAX_C));
            }
            if ((Original_Element_MAX_SI == null)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((string)(Original_Element_MAX_SI));
            }
            if ((Original_Element_MAX_MN == null)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((string)(Original_Element_MAX_MN));
            }
            if ((Original_Element_MAX_P == null)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((string)(Original_Element_MAX_P));
            }
            if ((Original_Element_MAX_S == null)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((string)(Original_Element_MAX_S));
            }
            if ((Original_Element_MAX_NI == null)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((string)(Original_Element_MAX_NI));
            }
            if ((Original_Element_MAX_CR == null)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((string)(Original_Element_MAX_CR));
            }
            if ((Original_Element_MAX_MO == null)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((string)(Original_Element_MAX_MO));
            }
            if ((Original_Element_MAX_CU == null)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((string)(Original_Element_MAX_CU));
            }
            if ((Original_Test_MIN_UTS == null)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((string)(Original_Test_MIN_UTS));
            }
            if ((Original_Test_MIN_YS == null)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((string)(Original_Test_MIN_YS));
            }
            if ((Original_Test_MIN_Elongation == null)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((string)(Original_Test_MIN_Elongation));
            }
            if ((Original_Test_MAX_UTS == null)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((string)(Original_Test_MAX_UTS));
            }
            if ((Original_Test_MAX_YS == null)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((string)(Original_Test_MAX_YS));
            }
            if ((Original_Test_MAX_Elongation == null)) {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[90].Value = ((string)(Original_Test_MAX_Elongation));
            }
            if ((Original_Test_Temp == null)) {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[92].Value = ((string)(Original_Test_Temp));
            }
            if ((Original_Test_ImpectValue == null)) {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[94].Value = ((string)(Original_Test_ImpectValue));
            }
            if ((Original_Test_Condition == null)) {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[96].Value = ((string)(Original_Test_Condition));
            }
            if ((Original_Size_StandardValue == null)) {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[98].Value = ((string)(Original_Size_StandardValue));
            }
            if ((Original_Size_ActualValue == null)) {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[100].Value = ((string)(Original_Size_ActualValue));
            }
            if ((Original_Coating_StandardValue == null)) {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[102].Value = ((string)(Original_Coating_StandardValue));
            }
            if ((Original_Coating_ActualValue == null)) {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[104].Value = ((string)(Original_Coating_ActualValue));
            }
            if ((Original_UTSWire_StandardValue == null)) {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[106].Value = ((string)(Original_UTSWire_StandardValue));
            }
            if ((Original_UTSWire_ActualValue == null)) {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[108].Value = ((string)(Original_UTSWire_ActualValue));
            }
            if ((Original_CastDia_StandardValue == null)) {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[110].Value = ((string)(Original_CastDia_StandardValue));
            }
            if ((Original_CastDia_ActualValue == null)) {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[112].Value = ((string)(Original_CastDia_ActualValue));
            }
            if ((Original_Helix_StandardValue == null)) {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[114].Value = ((string)(Original_Helix_StandardValue));
            }
            if ((Original_Helix_ActualValue == null)) {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[116].Value = ((string)(Original_Helix_ActualValue));
            }
            if ((Original_OtherTest_Radio_Specs == null)) {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[118].Value = ((string)(Original_OtherTest_Radio_Specs));
            }
            if ((Original_OtherTest_FaceBend_Specs == null)) {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[120].Value = ((string)(Original_OtherTest_FaceBend_Specs));
            }
            if ((Original_OtherTest_Filled_Specs == null)) {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[122].Value = ((string)(Original_OtherTest_Filled_Specs));
            }
            if ((Original_Remarks == null)) {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[124].Value = ((string)(Original_Remarks));
            }
            if ((Original_IsApproved.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[126].Value = ((int)(Original_IsApproved.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            if ((Original_HideSection == null)) {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[128].Value = ((string)(Original_HideSection));
            }
            if ((Original_CombineBatchNo == null)) {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[130].Value = ((string)(Original_CombineBatchNo));
            }
            if ((Original_Certificate_Type == null)) {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[132].Value = ((string)(Original_Certificate_Type));
            }
            if ((Original_Created_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[134].Value = ((System.DateTime)(Original_Created_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            if ((Original_Created_By == null)) {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[136].Value = ((string)(Original_Created_By));
            }
            if ((Original_Modified_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[138].Value = ((System.DateTime)(Original_Modified_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            if ((Original_Modified_By == null)) {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[140].Value = ((string)(Original_Modified_By));
            }
            if ((Original_Approved_By == null)) {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[142].Value = ((string)(Original_Approved_By));
            }
            if ((Original_Approved_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[144].Value = ((System.DateTime)(Original_Approved_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            if ((Original_IsShowCELogo == null)) {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[146].Value = ((string)(Original_IsShowCELogo));
            }
            if ((Original_Tally_ItemName == null)) {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[148].Value = ((string)(Original_Tally_ItemName));
            }
            if ((Original_GradeType == null)) {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[150].Value = ((string)(Original_GradeType));
            }
            if ((Original_IsShowMig == null)) {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[152].Value = ((string)(Original_IsShowMig));
            }
            if ((Original_IsShowFlux == null)) {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[154].Value = ((string)(Original_IsShowFlux));
            }
            if ((Original_IsShowNone == null)) {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[156].Value = ((string)(Original_IsShowNone));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string CertificateNo, 
                    string CustomerName, 
                    global::System.Nullable<global::System.DateTime> IssueDate, 
                    string Quanity, 
                    string InvoiceNo, 
                    string TradeDesignation, 
                    string Size, 
                    string BatchDate, 
                    string BatchNo, 
                    global::System.Nullable<global::System.DateTime> ManufecturingDate, 
                    string Specification, 
                    string WeldingProcess, 
                    string ShieldingGas, 
                    string PreHeatInerpassTemp, 
                    string Type, 
                    string APMS, 
                    string FlowRate, 
                    string CurrentPolarity, 
                    string Volts, 
                    string TravelSpeed, 
                    string BaseMetal, 
                    string Element_MIN_C, 
                    string Element_MIN_SI, 
                    string Element_MIN_MN, 
                    string Element_MIN_P, 
                    string Element_MIN_S, 
                    string Element_MIN_NI, 
                    string Element_MIN_CR, 
                    string Element_MIN_MO, 
                    string Element_MIN_CU, 
                    string Element_MAX_C, 
                    string Element_MAX_SI, 
                    string Element_MAX_MN, 
                    string Element_MAX_P, 
                    string Element_MAX_S, 
                    string Element_MAX_NI, 
                    string Element_MAX_CR, 
                    string Element_MAX_MO, 
                    string Element_MAX_CU, 
                    string Test_MIN_UTS, 
                    string Test_MIN_YS, 
                    string Test_MIN_Elongation, 
                    string Test_MAX_UTS, 
                    string Test_MAX_YS, 
                    string Test_MAX_Elongation, 
                    string Test_Temp, 
                    string Test_ImpectValue, 
                    string Test_Condition, 
                    string Size_StandardValue, 
                    string Size_ActualValue, 
                    string Coating_StandardValue, 
                    string Coating_ActualValue, 
                    string UTSWire_StandardValue, 
                    string UTSWire_ActualValue, 
                    string CastDia_StandardValue, 
                    string CastDia_ActualValue, 
                    string Helix_StandardValue, 
                    string Helix_ActualValue, 
                    string OtherTest_Radio_Specs, 
                    string OtherTest_FaceBend_Specs, 
                    string OtherTest_Filled_Specs, 
                    string Remarks, 
                    global::System.Nullable<int> IsApproved, 
                    string HideSection, 
                    string CombineBatchNo, 
                    string Certificate_Type, 
                    global::System.Nullable<global::System.DateTime> Created_Date, 
                    string Created_By, 
                    global::System.Nullable<global::System.DateTime> Modified_Date, 
                    string Modified_By, 
                    string Approved_By, 
                    global::System.Nullable<global::System.DateTime> Approved_Date, 
                    string IsShowCELogo, 
                    string Tally_ItemName, 
                    string GradeType, 
                    string IsShowMig, 
                    string IsShowFlux, 
                    string IsShowNone) {
            if ((CertificateNo == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CertificateNo));
            }
            if ((CustomerName == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CustomerName));
            }
            if ((IssueDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(IssueDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Quanity == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Quanity));
            }
            if ((InvoiceNo == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(InvoiceNo));
            }
            if ((TradeDesignation == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(TradeDesignation));
            }
            if ((Size == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Size));
            }
            if ((BatchDate == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(BatchDate));
            }
            if ((BatchNo == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(BatchNo));
            }
            if ((ManufecturingDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(ManufecturingDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Specification == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Specification));
            }
            if ((WeldingProcess == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(WeldingProcess));
            }
            if ((ShieldingGas == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(ShieldingGas));
            }
            if ((PreHeatInerpassTemp == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(PreHeatInerpassTemp));
            }
            if ((Type == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Type));
            }
            if ((APMS == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(APMS));
            }
            if ((FlowRate == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(FlowRate));
            }
            if ((CurrentPolarity == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(CurrentPolarity));
            }
            if ((Volts == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Volts));
            }
            if ((TravelSpeed == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(TravelSpeed));
            }
            if ((BaseMetal == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(BaseMetal));
            }
            if ((Element_MIN_C == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(Element_MIN_C));
            }
            if ((Element_MIN_SI == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(Element_MIN_SI));
            }
            if ((Element_MIN_MN == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(Element_MIN_MN));
            }
            if ((Element_MIN_P == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(Element_MIN_P));
            }
            if ((Element_MIN_S == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(Element_MIN_S));
            }
            if ((Element_MIN_NI == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(Element_MIN_NI));
            }
            if ((Element_MIN_CR == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(Element_MIN_CR));
            }
            if ((Element_MIN_MO == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(Element_MIN_MO));
            }
            if ((Element_MIN_CU == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(Element_MIN_CU));
            }
            if ((Element_MAX_C == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(Element_MAX_C));
            }
            if ((Element_MAX_SI == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(Element_MAX_SI));
            }
            if ((Element_MAX_MN == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(Element_MAX_MN));
            }
            if ((Element_MAX_P == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(Element_MAX_P));
            }
            if ((Element_MAX_S == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(Element_MAX_S));
            }
            if ((Element_MAX_NI == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(Element_MAX_NI));
            }
            if ((Element_MAX_CR == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(Element_MAX_CR));
            }
            if ((Element_MAX_MO == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(Element_MAX_MO));
            }
            if ((Element_MAX_CU == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(Element_MAX_CU));
            }
            if ((Test_MIN_UTS == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(Test_MIN_UTS));
            }
            if ((Test_MIN_YS == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(Test_MIN_YS));
            }
            if ((Test_MIN_Elongation == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(Test_MIN_Elongation));
            }
            if ((Test_MAX_UTS == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(Test_MAX_UTS));
            }
            if ((Test_MAX_YS == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(Test_MAX_YS));
            }
            if ((Test_MAX_Elongation == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(Test_MAX_Elongation));
            }
            if ((Test_Temp == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(Test_Temp));
            }
            if ((Test_ImpectValue == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(Test_ImpectValue));
            }
            if ((Test_Condition == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(Test_Condition));
            }
            if ((Size_StandardValue == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(Size_StandardValue));
            }
            if ((Size_ActualValue == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(Size_ActualValue));
            }
            if ((Coating_StandardValue == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(Coating_StandardValue));
            }
            if ((Coating_ActualValue == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(Coating_ActualValue));
            }
            if ((UTSWire_StandardValue == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(UTSWire_StandardValue));
            }
            if ((UTSWire_ActualValue == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(UTSWire_ActualValue));
            }
            if ((CastDia_StandardValue == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(CastDia_StandardValue));
            }
            if ((CastDia_ActualValue == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(CastDia_ActualValue));
            }
            if ((Helix_StandardValue == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(Helix_StandardValue));
            }
            if ((Helix_ActualValue == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(Helix_ActualValue));
            }
            if ((OtherTest_Radio_Specs == null)) {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(OtherTest_Radio_Specs));
            }
            if ((OtherTest_FaceBend_Specs == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(OtherTest_FaceBend_Specs));
            }
            if ((OtherTest_Filled_Specs == null)) {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(OtherTest_Filled_Specs));
            }
            if ((Remarks == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(Remarks));
            }
            if ((IsApproved.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((int)(IsApproved.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((HideSection == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(HideSection));
            }
            if ((CombineBatchNo == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(CombineBatchNo));
            }
            if ((Certificate_Type == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(Certificate_Type));
            }
            if ((Created_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[66].Value = ((System.DateTime)(Created_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Created_By == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(Created_By));
            }
            if ((Modified_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((System.DateTime)(Modified_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Modified_By == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(Modified_By));
            }
            if ((Approved_By == null)) {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = ((string)(Approved_By));
            }
            if ((Approved_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[71].Value = ((System.DateTime)(Approved_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((IsShowCELogo == null)) {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = ((string)(IsShowCELogo));
            }
            if ((Tally_ItemName == null)) {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = ((string)(Tally_ItemName));
            }
            if ((GradeType == null)) {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = ((string)(GradeType));
            }
            if ((IsShowMig == null)) {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = ((string)(IsShowMig));
            }
            if ((IsShowFlux == null)) {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = ((string)(IsShowFlux));
            }
            if ((IsShowNone == null)) {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = ((string)(IsShowNone));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CertificateNo, 
                    string CustomerName, 
                    global::System.Nullable<global::System.DateTime> IssueDate, 
                    string Quanity, 
                    string InvoiceNo, 
                    string TradeDesignation, 
                    string Size, 
                    string BatchDate, 
                    string BatchNo, 
                    global::System.Nullable<global::System.DateTime> ManufecturingDate, 
                    string Specification, 
                    string WeldingProcess, 
                    string ShieldingGas, 
                    string PreHeatInerpassTemp, 
                    string Type, 
                    string APMS, 
                    string FlowRate, 
                    string CurrentPolarity, 
                    string Volts, 
                    string TravelSpeed, 
                    string BaseMetal, 
                    string Element_MIN_C, 
                    string Element_MIN_SI, 
                    string Element_MIN_MN, 
                    string Element_MIN_P, 
                    string Element_MIN_S, 
                    string Element_MIN_NI, 
                    string Element_MIN_CR, 
                    string Element_MIN_MO, 
                    string Element_MIN_CU, 
                    string Element_MAX_C, 
                    string Element_MAX_SI, 
                    string Element_MAX_MN, 
                    string Element_MAX_P, 
                    string Element_MAX_S, 
                    string Element_MAX_NI, 
                    string Element_MAX_CR, 
                    string Element_MAX_MO, 
                    string Element_MAX_CU, 
                    string Test_MIN_UTS, 
                    string Test_MIN_YS, 
                    string Test_MIN_Elongation, 
                    string Test_MAX_UTS, 
                    string Test_MAX_YS, 
                    string Test_MAX_Elongation, 
                    string Test_Temp, 
                    string Test_ImpectValue, 
                    string Test_Condition, 
                    string Size_StandardValue, 
                    string Size_ActualValue, 
                    string Coating_StandardValue, 
                    string Coating_ActualValue, 
                    string UTSWire_StandardValue, 
                    string UTSWire_ActualValue, 
                    string CastDia_StandardValue, 
                    string CastDia_ActualValue, 
                    string Helix_StandardValue, 
                    string Helix_ActualValue, 
                    string OtherTest_Radio_Specs, 
                    string OtherTest_FaceBend_Specs, 
                    string OtherTest_Filled_Specs, 
                    string Remarks, 
                    global::System.Nullable<int> IsApproved, 
                    string HideSection, 
                    string CombineBatchNo, 
                    string Certificate_Type, 
                    global::System.Nullable<global::System.DateTime> Created_Date, 
                    string Created_By, 
                    global::System.Nullable<global::System.DateTime> Modified_Date, 
                    string Modified_By, 
                    string Approved_By, 
                    global::System.Nullable<global::System.DateTime> Approved_Date, 
                    string IsShowCELogo, 
                    string Tally_ItemName, 
                    string GradeType, 
                    string IsShowMig, 
                    string IsShowFlux, 
                    string IsShowNone, 
                    int Original_Id, 
                    string Original_CertificateNo, 
                    string Original_CustomerName, 
                    global::System.Nullable<global::System.DateTime> Original_IssueDate, 
                    string Original_Quanity, 
                    string Original_InvoiceNo, 
                    string Original_TradeDesignation, 
                    string Original_Size, 
                    string Original_BatchDate, 
                    string Original_BatchNo, 
                    global::System.Nullable<global::System.DateTime> Original_ManufecturingDate, 
                    string Original_Specification, 
                    string Original_WeldingProcess, 
                    string Original_ShieldingGas, 
                    string Original_PreHeatInerpassTemp, 
                    string Original_Type, 
                    string Original_APMS, 
                    string Original_FlowRate, 
                    string Original_CurrentPolarity, 
                    string Original_Volts, 
                    string Original_TravelSpeed, 
                    string Original_BaseMetal, 
                    string Original_Element_MIN_C, 
                    string Original_Element_MIN_SI, 
                    string Original_Element_MIN_MN, 
                    string Original_Element_MIN_P, 
                    string Original_Element_MIN_S, 
                    string Original_Element_MIN_NI, 
                    string Original_Element_MIN_CR, 
                    string Original_Element_MIN_MO, 
                    string Original_Element_MIN_CU, 
                    string Original_Element_MAX_C, 
                    string Original_Element_MAX_SI, 
                    string Original_Element_MAX_MN, 
                    string Original_Element_MAX_P, 
                    string Original_Element_MAX_S, 
                    string Original_Element_MAX_NI, 
                    string Original_Element_MAX_CR, 
                    string Original_Element_MAX_MO, 
                    string Original_Element_MAX_CU, 
                    string Original_Test_MIN_UTS, 
                    string Original_Test_MIN_YS, 
                    string Original_Test_MIN_Elongation, 
                    string Original_Test_MAX_UTS, 
                    string Original_Test_MAX_YS, 
                    string Original_Test_MAX_Elongation, 
                    string Original_Test_Temp, 
                    string Original_Test_ImpectValue, 
                    string Original_Test_Condition, 
                    string Original_Size_StandardValue, 
                    string Original_Size_ActualValue, 
                    string Original_Coating_StandardValue, 
                    string Original_Coating_ActualValue, 
                    string Original_UTSWire_StandardValue, 
                    string Original_UTSWire_ActualValue, 
                    string Original_CastDia_StandardValue, 
                    string Original_CastDia_ActualValue, 
                    string Original_Helix_StandardValue, 
                    string Original_Helix_ActualValue, 
                    string Original_OtherTest_Radio_Specs, 
                    string Original_OtherTest_FaceBend_Specs, 
                    string Original_OtherTest_Filled_Specs, 
                    string Original_Remarks, 
                    global::System.Nullable<int> Original_IsApproved, 
                    string Original_HideSection, 
                    string Original_CombineBatchNo, 
                    string Original_Certificate_Type, 
                    global::System.Nullable<global::System.DateTime> Original_Created_Date, 
                    string Original_Created_By, 
                    global::System.Nullable<global::System.DateTime> Original_Modified_Date, 
                    string Original_Modified_By, 
                    string Original_Approved_By, 
                    global::System.Nullable<global::System.DateTime> Original_Approved_Date, 
                    string Original_IsShowCELogo, 
                    string Original_Tally_ItemName, 
                    string Original_GradeType, 
                    string Original_IsShowMig, 
                    string Original_IsShowFlux, 
                    string Original_IsShowNone, 
                    int Id) {
            if ((CertificateNo == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CertificateNo));
            }
            if ((CustomerName == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CustomerName));
            }
            if ((IssueDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(IssueDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Quanity == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Quanity));
            }
            if ((InvoiceNo == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(InvoiceNo));
            }
            if ((TradeDesignation == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(TradeDesignation));
            }
            if ((Size == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Size));
            }
            if ((BatchDate == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(BatchDate));
            }
            if ((BatchNo == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(BatchNo));
            }
            if ((ManufecturingDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(ManufecturingDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Specification == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Specification));
            }
            if ((WeldingProcess == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(WeldingProcess));
            }
            if ((ShieldingGas == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(ShieldingGas));
            }
            if ((PreHeatInerpassTemp == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(PreHeatInerpassTemp));
            }
            if ((Type == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Type));
            }
            if ((APMS == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(APMS));
            }
            if ((FlowRate == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(FlowRate));
            }
            if ((CurrentPolarity == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(CurrentPolarity));
            }
            if ((Volts == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Volts));
            }
            if ((TravelSpeed == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(TravelSpeed));
            }
            if ((BaseMetal == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(BaseMetal));
            }
            if ((Element_MIN_C == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Element_MIN_C));
            }
            if ((Element_MIN_SI == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Element_MIN_SI));
            }
            if ((Element_MIN_MN == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Element_MIN_MN));
            }
            if ((Element_MIN_P == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Element_MIN_P));
            }
            if ((Element_MIN_S == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Element_MIN_S));
            }
            if ((Element_MIN_NI == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Element_MIN_NI));
            }
            if ((Element_MIN_CR == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Element_MIN_CR));
            }
            if ((Element_MIN_MO == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Element_MIN_MO));
            }
            if ((Element_MIN_CU == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Element_MIN_CU));
            }
            if ((Element_MAX_C == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Element_MAX_C));
            }
            if ((Element_MAX_SI == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Element_MAX_SI));
            }
            if ((Element_MAX_MN == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Element_MAX_MN));
            }
            if ((Element_MAX_P == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Element_MAX_P));
            }
            if ((Element_MAX_S == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Element_MAX_S));
            }
            if ((Element_MAX_NI == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Element_MAX_NI));
            }
            if ((Element_MAX_CR == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Element_MAX_CR));
            }
            if ((Element_MAX_MO == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Element_MAX_MO));
            }
            if ((Element_MAX_CU == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Element_MAX_CU));
            }
            if ((Test_MIN_UTS == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Test_MIN_UTS));
            }
            if ((Test_MIN_YS == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Test_MIN_YS));
            }
            if ((Test_MIN_Elongation == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Test_MIN_Elongation));
            }
            if ((Test_MAX_UTS == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Test_MAX_UTS));
            }
            if ((Test_MAX_YS == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Test_MAX_YS));
            }
            if ((Test_MAX_Elongation == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Test_MAX_Elongation));
            }
            if ((Test_Temp == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Test_Temp));
            }
            if ((Test_ImpectValue == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Test_ImpectValue));
            }
            if ((Test_Condition == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Test_Condition));
            }
            if ((Size_StandardValue == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Size_StandardValue));
            }
            if ((Size_ActualValue == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Size_ActualValue));
            }
            if ((Coating_StandardValue == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Coating_StandardValue));
            }
            if ((Coating_ActualValue == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Coating_ActualValue));
            }
            if ((UTSWire_StandardValue == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(UTSWire_StandardValue));
            }
            if ((UTSWire_ActualValue == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(UTSWire_ActualValue));
            }
            if ((CastDia_StandardValue == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(CastDia_StandardValue));
            }
            if ((CastDia_ActualValue == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(CastDia_ActualValue));
            }
            if ((Helix_StandardValue == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Helix_StandardValue));
            }
            if ((Helix_ActualValue == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Helix_ActualValue));
            }
            if ((OtherTest_Radio_Specs == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(OtherTest_Radio_Specs));
            }
            if ((OtherTest_FaceBend_Specs == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(OtherTest_FaceBend_Specs));
            }
            if ((OtherTest_Filled_Specs == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(OtherTest_Filled_Specs));
            }
            if ((Remarks == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Remarks));
            }
            if ((IsApproved.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((int)(IsApproved.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((HideSection == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(HideSection));
            }
            if ((CombineBatchNo == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(CombineBatchNo));
            }
            if ((Certificate_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Certificate_Type));
            }
            if ((Created_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((System.DateTime)(Created_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Created_By == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Created_By));
            }
            if ((Modified_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((System.DateTime)(Modified_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Modified_By == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Modified_By));
            }
            if ((Approved_By == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Approved_By));
            }
            if ((Approved_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((System.DateTime)(Approved_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((IsShowCELogo == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(IsShowCELogo));
            }
            if ((Tally_ItemName == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Tally_ItemName));
            }
            if ((GradeType == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(GradeType));
            }
            if ((IsShowMig == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(IsShowMig));
            }
            if ((IsShowFlux == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(IsShowFlux));
            }
            if ((IsShowNone == null)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(IsShowNone));
            }
            this.Adapter.UpdateCommand.Parameters[78].Value = ((int)(Original_Id));
            if ((Original_CertificateNo == null)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(Original_CertificateNo));
            }
            if ((Original_CustomerName == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(Original_CustomerName));
            }
            if ((Original_IssueDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((System.DateTime)(Original_IssueDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_Quanity == null)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(Original_Quanity));
            }
            if ((Original_InvoiceNo == null)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((string)(Original_InvoiceNo));
            }
            if ((Original_TradeDesignation == null)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[90].Value = ((string)(Original_TradeDesignation));
            }
            if ((Original_Size == null)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[92].Value = ((string)(Original_Size));
            }
            if ((Original_BatchDate == null)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((string)(Original_BatchDate));
            }
            if ((Original_BatchNo == null)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((string)(Original_BatchNo));
            }
            if ((Original_ManufecturingDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((System.DateTime)(Original_ManufecturingDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((Original_Specification == null)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((string)(Original_Specification));
            }
            if ((Original_WeldingProcess == null)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[102].Value = ((string)(Original_WeldingProcess));
            }
            if ((Original_ShieldingGas == null)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(Original_ShieldingGas));
            }
            if ((Original_PreHeatInerpassTemp == null)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(Original_PreHeatInerpassTemp));
            }
            if ((Original_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((string)(Original_Type));
            }
            if ((Original_APMS == null)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[110].Value = ((string)(Original_APMS));
            }
            if ((Original_FlowRate == null)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((string)(Original_FlowRate));
            }
            if ((Original_CurrentPolarity == null)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((string)(Original_CurrentPolarity));
            }
            if ((Original_Volts == null)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[116].Value = ((string)(Original_Volts));
            }
            if ((Original_TravelSpeed == null)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[118].Value = ((string)(Original_TravelSpeed));
            }
            if ((Original_BaseMetal == null)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[120].Value = ((string)(Original_BaseMetal));
            }
            if ((Original_Element_MIN_C == null)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[122].Value = ((string)(Original_Element_MIN_C));
            }
            if ((Original_Element_MIN_SI == null)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[124].Value = ((string)(Original_Element_MIN_SI));
            }
            if ((Original_Element_MIN_MN == null)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[126].Value = ((string)(Original_Element_MIN_MN));
            }
            if ((Original_Element_MIN_P == null)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[128].Value = ((string)(Original_Element_MIN_P));
            }
            if ((Original_Element_MIN_S == null)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[130].Value = ((string)(Original_Element_MIN_S));
            }
            if ((Original_Element_MIN_NI == null)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[132].Value = ((string)(Original_Element_MIN_NI));
            }
            if ((Original_Element_MIN_CR == null)) {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[134].Value = ((string)(Original_Element_MIN_CR));
            }
            if ((Original_Element_MIN_MO == null)) {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[136].Value = ((string)(Original_Element_MIN_MO));
            }
            if ((Original_Element_MIN_CU == null)) {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[138].Value = ((string)(Original_Element_MIN_CU));
            }
            if ((Original_Element_MAX_C == null)) {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[140].Value = ((string)(Original_Element_MAX_C));
            }
            if ((Original_Element_MAX_SI == null)) {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[142].Value = ((string)(Original_Element_MAX_SI));
            }
            if ((Original_Element_MAX_MN == null)) {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[144].Value = ((string)(Original_Element_MAX_MN));
            }
            if ((Original_Element_MAX_P == null)) {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[146].Value = ((string)(Original_Element_MAX_P));
            }
            if ((Original_Element_MAX_S == null)) {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[148].Value = ((string)(Original_Element_MAX_S));
            }
            if ((Original_Element_MAX_NI == null)) {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[150].Value = ((string)(Original_Element_MAX_NI));
            }
            if ((Original_Element_MAX_CR == null)) {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[152].Value = ((string)(Original_Element_MAX_CR));
            }
            if ((Original_Element_MAX_MO == null)) {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[154].Value = ((string)(Original_Element_MAX_MO));
            }
            if ((Original_Element_MAX_CU == null)) {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[156].Value = ((string)(Original_Element_MAX_CU));
            }
            if ((Original_Test_MIN_UTS == null)) {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[158].Value = ((string)(Original_Test_MIN_UTS));
            }
            if ((Original_Test_MIN_YS == null)) {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[160].Value = ((string)(Original_Test_MIN_YS));
            }
            if ((Original_Test_MIN_Elongation == null)) {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[162].Value = ((string)(Original_Test_MIN_Elongation));
            }
            if ((Original_Test_MAX_UTS == null)) {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[164].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[164].Value = ((string)(Original_Test_MAX_UTS));
            }
            if ((Original_Test_MAX_YS == null)) {
                this.Adapter.UpdateCommand.Parameters[165].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[166].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[165].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[166].Value = ((string)(Original_Test_MAX_YS));
            }
            if ((Original_Test_MAX_Elongation == null)) {
                this.Adapter.UpdateCommand.Parameters[167].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[168].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[167].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[168].Value = ((string)(Original_Test_MAX_Elongation));
            }
            if ((Original_Test_Temp == null)) {
                this.Adapter.UpdateCommand.Parameters[169].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[170].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[169].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[170].Value = ((string)(Original_Test_Temp));
            }
            if ((Original_Test_ImpectValue == null)) {
                this.Adapter.UpdateCommand.Parameters[171].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[172].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[171].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[172].Value = ((string)(Original_Test_ImpectValue));
            }
            if ((Original_Test_Condition == null)) {
                this.Adapter.UpdateCommand.Parameters[173].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[174].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[173].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[174].Value = ((string)(Original_Test_Condition));
            }
            if ((Original_Size_StandardValue == null)) {
                this.Adapter.UpdateCommand.Parameters[175].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[176].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[175].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[176].Value = ((string)(Original_Size_StandardValue));
            }
            if ((Original_Size_ActualValue == null)) {
                this.Adapter.UpdateCommand.Parameters[177].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[178].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[177].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[178].Value = ((string)(Original_Size_ActualValue));
            }
            if ((Original_Coating_StandardValue == null)) {
                this.Adapter.UpdateCommand.Parameters[179].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[180].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[179].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[180].Value = ((string)(Original_Coating_StandardValue));
            }
            if ((Original_Coating_ActualValue == null)) {
                this.Adapter.UpdateCommand.Parameters[181].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[182].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[181].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[182].Value = ((string)(Original_Coating_ActualValue));
            }
            if ((Original_UTSWire_StandardValue == null)) {
                this.Adapter.UpdateCommand.Parameters[183].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[184].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[183].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[184].Value = ((string)(Original_UTSWire_StandardValue));
            }
            if ((Original_UTSWire_ActualValue == null)) {
                this.Adapter.UpdateCommand.Parameters[185].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[186].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[185].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[186].Value = ((string)(Original_UTSWire_ActualValue));
            }
            if ((Original_CastDia_StandardValue == null)) {
                this.Adapter.UpdateCommand.Parameters[187].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[188].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[187].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[188].Value = ((string)(Original_CastDia_StandardValue));
            }
            if ((Original_CastDia_ActualValue == null)) {
                this.Adapter.UpdateCommand.Parameters[189].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[190].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[189].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[190].Value = ((string)(Original_CastDia_ActualValue));
            }
            if ((Original_Helix_StandardValue == null)) {
                this.Adapter.UpdateCommand.Parameters[191].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[192].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[191].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[192].Value = ((string)(Original_Helix_StandardValue));
            }
            if ((Original_Helix_ActualValue == null)) {
                this.Adapter.UpdateCommand.Parameters[193].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[194].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[193].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[194].Value = ((string)(Original_Helix_ActualValue));
            }
            if ((Original_OtherTest_Radio_Specs == null)) {
                this.Adapter.UpdateCommand.Parameters[195].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[196].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[195].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[196].Value = ((string)(Original_OtherTest_Radio_Specs));
            }
            if ((Original_OtherTest_FaceBend_Specs == null)) {
                this.Adapter.UpdateCommand.Parameters[197].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[198].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[197].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[198].Value = ((string)(Original_OtherTest_FaceBend_Specs));
            }
            if ((Original_OtherTest_Filled_Specs == null)) {
                this.Adapter.UpdateCommand.Parameters[199].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[200].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[199].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[200].Value = ((string)(Original_OtherTest_Filled_Specs));
            }
            if ((Original_Remarks == null)) {
                this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[202].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[202].Value = ((string)(Original_Remarks));
            }
            if ((Original_IsApproved.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[204].Value = ((int)(Original_IsApproved.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[204].Value = global::System.DBNull.Value;
            }
            if ((Original_HideSection == null)) {
                this.Adapter.UpdateCommand.Parameters[205].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[206].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[205].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[206].Value = ((string)(Original_HideSection));
            }
            if ((Original_CombineBatchNo == null)) {
                this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[208].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[208].Value = ((string)(Original_CombineBatchNo));
            }
            if ((Original_Certificate_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[210].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[210].Value = ((string)(Original_Certificate_Type));
            }
            if ((Original_Created_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[212].Value = ((System.DateTime)(Original_Created_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[212].Value = global::System.DBNull.Value;
            }
            if ((Original_Created_By == null)) {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[214].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[214].Value = ((string)(Original_Created_By));
            }
            if ((Original_Modified_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[216].Value = ((System.DateTime)(Original_Modified_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[216].Value = global::System.DBNull.Value;
            }
            if ((Original_Modified_By == null)) {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[218].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[218].Value = ((string)(Original_Modified_By));
            }
            if ((Original_Approved_By == null)) {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[220].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[220].Value = ((string)(Original_Approved_By));
            }
            if ((Original_Approved_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[221].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[222].Value = ((System.DateTime)(Original_Approved_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[221].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[222].Value = global::System.DBNull.Value;
            }
            if ((Original_IsShowCELogo == null)) {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[224].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[224].Value = ((string)(Original_IsShowCELogo));
            }
            if ((Original_Tally_ItemName == null)) {
                this.Adapter.UpdateCommand.Parameters[225].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[226].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[225].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[226].Value = ((string)(Original_Tally_ItemName));
            }
            if ((Original_GradeType == null)) {
                this.Adapter.UpdateCommand.Parameters[227].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[228].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[227].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[228].Value = ((string)(Original_GradeType));
            }
            if ((Original_IsShowMig == null)) {
                this.Adapter.UpdateCommand.Parameters[229].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[230].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[229].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[230].Value = ((string)(Original_IsShowMig));
            }
            if ((Original_IsShowFlux == null)) {
                this.Adapter.UpdateCommand.Parameters[231].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[232].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[231].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[232].Value = ((string)(Original_IsShowFlux));
            }
            if ((Original_IsShowNone == null)) {
                this.Adapter.UpdateCommand.Parameters[233].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[234].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[233].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[234].Value = ((string)(Original_IsShowNone));
            }
            this.Adapter.UpdateCommand.Parameters[235].Value = ((int)(Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CertificateNo, 
                    string CustomerName, 
                    global::System.Nullable<global::System.DateTime> IssueDate, 
                    string Quanity, 
                    string InvoiceNo, 
                    string TradeDesignation, 
                    string Size, 
                    string BatchDate, 
                    string BatchNo, 
                    global::System.Nullable<global::System.DateTime> ManufecturingDate, 
                    string Specification, 
                    string WeldingProcess, 
                    string ShieldingGas, 
                    string PreHeatInerpassTemp, 
                    string Type, 
                    string APMS, 
                    string FlowRate, 
                    string CurrentPolarity, 
                    string Volts, 
                    string TravelSpeed, 
                    string BaseMetal, 
                    string Element_MIN_C, 
                    string Element_MIN_SI, 
                    string Element_MIN_MN, 
                    string Element_MIN_P, 
                    string Element_MIN_S, 
                    string Element_MIN_NI, 
                    string Element_MIN_CR, 
                    string Element_MIN_MO, 
                    string Element_MIN_CU, 
                    string Element_MAX_C, 
                    string Element_MAX_SI, 
                    string Element_MAX_MN, 
                    string Element_MAX_P, 
                    string Element_MAX_S, 
                    string Element_MAX_NI, 
                    string Element_MAX_CR, 
                    string Element_MAX_MO, 
                    string Element_MAX_CU, 
                    string Test_MIN_UTS, 
                    string Test_MIN_YS, 
                    string Test_MIN_Elongation, 
                    string Test_MAX_UTS, 
                    string Test_MAX_YS, 
                    string Test_MAX_Elongation, 
                    string Test_Temp, 
                    string Test_ImpectValue, 
                    string Test_Condition, 
                    string Size_StandardValue, 
                    string Size_ActualValue, 
                    string Coating_StandardValue, 
                    string Coating_ActualValue, 
                    string UTSWire_StandardValue, 
                    string UTSWire_ActualValue, 
                    string CastDia_StandardValue, 
                    string CastDia_ActualValue, 
                    string Helix_StandardValue, 
                    string Helix_ActualValue, 
                    string OtherTest_Radio_Specs, 
                    string OtherTest_FaceBend_Specs, 
                    string OtherTest_Filled_Specs, 
                    string Remarks, 
                    global::System.Nullable<int> IsApproved, 
                    string HideSection, 
                    string CombineBatchNo, 
                    string Certificate_Type, 
                    global::System.Nullable<global::System.DateTime> Created_Date, 
                    string Created_By, 
                    global::System.Nullable<global::System.DateTime> Modified_Date, 
                    string Modified_By, 
                    string Approved_By, 
                    global::System.Nullable<global::System.DateTime> Approved_Date, 
                    string IsShowCELogo, 
                    string Tally_ItemName, 
                    string GradeType, 
                    string IsShowMig, 
                    string IsShowFlux, 
                    string IsShowNone, 
                    int Original_Id, 
                    string Original_CertificateNo, 
                    string Original_CustomerName, 
                    global::System.Nullable<global::System.DateTime> Original_IssueDate, 
                    string Original_Quanity, 
                    string Original_InvoiceNo, 
                    string Original_TradeDesignation, 
                    string Original_Size, 
                    string Original_BatchDate, 
                    string Original_BatchNo, 
                    global::System.Nullable<global::System.DateTime> Original_ManufecturingDate, 
                    string Original_Specification, 
                    string Original_WeldingProcess, 
                    string Original_ShieldingGas, 
                    string Original_PreHeatInerpassTemp, 
                    string Original_Type, 
                    string Original_APMS, 
                    string Original_FlowRate, 
                    string Original_CurrentPolarity, 
                    string Original_Volts, 
                    string Original_TravelSpeed, 
                    string Original_BaseMetal, 
                    string Original_Element_MIN_C, 
                    string Original_Element_MIN_SI, 
                    string Original_Element_MIN_MN, 
                    string Original_Element_MIN_P, 
                    string Original_Element_MIN_S, 
                    string Original_Element_MIN_NI, 
                    string Original_Element_MIN_CR, 
                    string Original_Element_MIN_MO, 
                    string Original_Element_MIN_CU, 
                    string Original_Element_MAX_C, 
                    string Original_Element_MAX_SI, 
                    string Original_Element_MAX_MN, 
                    string Original_Element_MAX_P, 
                    string Original_Element_MAX_S, 
                    string Original_Element_MAX_NI, 
                    string Original_Element_MAX_CR, 
                    string Original_Element_MAX_MO, 
                    string Original_Element_MAX_CU, 
                    string Original_Test_MIN_UTS, 
                    string Original_Test_MIN_YS, 
                    string Original_Test_MIN_Elongation, 
                    string Original_Test_MAX_UTS, 
                    string Original_Test_MAX_YS, 
                    string Original_Test_MAX_Elongation, 
                    string Original_Test_Temp, 
                    string Original_Test_ImpectValue, 
                    string Original_Test_Condition, 
                    string Original_Size_StandardValue, 
                    string Original_Size_ActualValue, 
                    string Original_Coating_StandardValue, 
                    string Original_Coating_ActualValue, 
                    string Original_UTSWire_StandardValue, 
                    string Original_UTSWire_ActualValue, 
                    string Original_CastDia_StandardValue, 
                    string Original_CastDia_ActualValue, 
                    string Original_Helix_StandardValue, 
                    string Original_Helix_ActualValue, 
                    string Original_OtherTest_Radio_Specs, 
                    string Original_OtherTest_FaceBend_Specs, 
                    string Original_OtherTest_Filled_Specs, 
                    string Original_Remarks, 
                    global::System.Nullable<int> Original_IsApproved, 
                    string Original_HideSection, 
                    string Original_CombineBatchNo, 
                    string Original_Certificate_Type, 
                    global::System.Nullable<global::System.DateTime> Original_Created_Date, 
                    string Original_Created_By, 
                    global::System.Nullable<global::System.DateTime> Original_Modified_Date, 
                    string Original_Modified_By, 
                    string Original_Approved_By, 
                    global::System.Nullable<global::System.DateTime> Original_Approved_Date, 
                    string Original_IsShowCELogo, 
                    string Original_Tally_ItemName, 
                    string Original_GradeType, 
                    string Original_IsShowMig, 
                    string Original_IsShowFlux, 
                    string Original_IsShowNone) {
            return this.Update(CertificateNo, CustomerName, IssueDate, Quanity, InvoiceNo, TradeDesignation, Size, BatchDate, BatchNo, ManufecturingDate, Specification, WeldingProcess, ShieldingGas, PreHeatInerpassTemp, Type, APMS, FlowRate, CurrentPolarity, Volts, TravelSpeed, BaseMetal, Element_MIN_C, Element_MIN_SI, Element_MIN_MN, Element_MIN_P, Element_MIN_S, Element_MIN_NI, Element_MIN_CR, Element_MIN_MO, Element_MIN_CU, Element_MAX_C, Element_MAX_SI, Element_MAX_MN, Element_MAX_P, Element_MAX_S, Element_MAX_NI, Element_MAX_CR, Element_MAX_MO, Element_MAX_CU, Test_MIN_UTS, Test_MIN_YS, Test_MIN_Elongation, Test_MAX_UTS, Test_MAX_YS, Test_MAX_Elongation, Test_Temp, Test_ImpectValue, Test_Condition, Size_StandardValue, Size_ActualValue, Coating_StandardValue, Coating_ActualValue, UTSWire_StandardValue, UTSWire_ActualValue, CastDia_StandardValue, CastDia_ActualValue, Helix_StandardValue, Helix_ActualValue, OtherTest_Radio_Specs, OtherTest_FaceBend_Specs, OtherTest_Filled_Specs, Remarks, IsApproved, HideSection, CombineBatchNo, Certificate_Type, Created_Date, Created_By, Modified_Date, Modified_By, Approved_By, Approved_Date, IsShowCELogo, Tally_ItemName, GradeType, IsShowMig, IsShowFlux, IsShowNone, Original_Id, Original_CertificateNo, Original_CustomerName, Original_IssueDate, Original_Quanity, Original_InvoiceNo, Original_TradeDesignation, Original_Size, Original_BatchDate, Original_BatchNo, Original_ManufecturingDate, Original_Specification, Original_WeldingProcess, Original_ShieldingGas, Original_PreHeatInerpassTemp, Original_Type, Original_APMS, Original_FlowRate, Original_CurrentPolarity, Original_Volts, Original_TravelSpeed, Original_BaseMetal, Original_Element_MIN_C, Original_Element_MIN_SI, Original_Element_MIN_MN, Original_Element_MIN_P, Original_Element_MIN_S, Original_Element_MIN_NI, Original_Element_MIN_CR, Original_Element_MIN_MO, Original_Element_MIN_CU, Original_Element_MAX_C, Original_Element_MAX_SI, Original_Element_MAX_MN, Original_Element_MAX_P, Original_Element_MAX_S, Original_Element_MAX_NI, Original_Element_MAX_CR, Original_Element_MAX_MO, Original_Element_MAX_CU, Original_Test_MIN_UTS, Original_Test_MIN_YS, Original_Test_MIN_Elongation, Original_Test_MAX_UTS, Original_Test_MAX_YS, Original_Test_MAX_Elongation, Original_Test_Temp, Original_Test_ImpectValue, Original_Test_Condition, Original_Size_StandardValue, Original_Size_ActualValue, Original_Coating_StandardValue, Original_Coating_ActualValue, Original_UTSWire_StandardValue, Original_UTSWire_ActualValue, Original_CastDia_StandardValue, Original_CastDia_ActualValue, Original_Helix_StandardValue, Original_Helix_ActualValue, Original_OtherTest_Radio_Specs, Original_OtherTest_FaceBend_Specs, Original_OtherTest_Filled_Specs, Original_Remarks, Original_IsApproved, Original_HideSection, Original_CombineBatchNo, Original_Certificate_Type, Original_Created_Date, Original_Created_By, Original_Modified_Date, Original_Modified_By, Original_Approved_By, Original_Approved_Date, Original_IsShowCELogo, Original_Tally_ItemName, Original_GradeType, Original_IsShowMig, Original_IsShowFlux, Original_IsShowNone, Original_Id);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TestCertificateRecordTableAdapter _testCertificateRecordTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TestCertificateRecordTableAdapter TestCertificateRecordTableAdapter {
            get {
                return this._testCertificateRecordTableAdapter;
            }
            set {
                this._testCertificateRecordTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._testCertificateRecordTableAdapter != null) 
                            && (this._testCertificateRecordTableAdapter.Connection != null))) {
                    return this._testCertificateRecordTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._testCertificateRecordTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(ShakuntEnterprisesDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._testCertificateRecordTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TestCertificateRecord.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._testCertificateRecordTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(ShakuntEnterprisesDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._testCertificateRecordTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TestCertificateRecord.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._testCertificateRecordTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(ShakuntEnterprisesDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._testCertificateRecordTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TestCertificateRecord.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._testCertificateRecordTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(ShakuntEnterprisesDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._testCertificateRecordTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._testCertificateRecordTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._testCertificateRecordTableAdapter != null)) {
                    revertConnections.Add(this._testCertificateRecordTableAdapter, this._testCertificateRecordTableAdapter.Connection);
                    this._testCertificateRecordTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._testCertificateRecordTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._testCertificateRecordTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._testCertificateRecordTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._testCertificateRecordTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._testCertificateRecordTableAdapter != null)) {
                    this._testCertificateRecordTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._testCertificateRecordTableAdapter]));
                    this._testCertificateRecordTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591